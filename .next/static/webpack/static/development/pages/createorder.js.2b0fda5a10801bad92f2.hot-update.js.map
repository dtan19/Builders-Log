{"version":3,"file":"static/webpack/static/development/pages/createorder.js.2b0fda5a10801bad92f2.hot-update.js","sources":["webpack:///./pages/createorder.js"],"sourcesContent":["import React from 'react';\nimport { \n  Form,\n  Item, \n  Input, \n  TextArea,\n  Dropdown,\n  Button, \n  Image, \n  Message, \n  Header, \n  Icon\n } from 'semantic-ui-react';\n import axios from 'axios';\n import baseUrl from '../utils/baseUrl';\n import catchErrors from '../utils/catchErrors';\n import Router from 'next/router';\n\n\n const INITIAL_ORDER = {\n    user: \"\",\n    products: [],\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    notes: \"\",\n    orderStatus: \"\",\n    total: \"\",\n    media: \"\",\n };\n\n const statusOptions = [\n  {\n    key: \"Open\",\n    text: \"Open\",\n    value: \"Open\",\n  }, \n  {\n    key: \"Complete\",\n    text: \"Complete\",\n    value: \"Complete\",\n  },\n ];\n\n\nfunction CreateOrder( _id, user ) {\n  const [record, setRecord] = React.useState(INITIAL_ORDER);\n  const [mediaPreview, setMediaPreview] = React.useState('');\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [disabled, setDisabled] = React.useState(true);\n  const [error, setError] = React.useState('');\n  const [status, setStatus] = React.useState(INITIAL_ORDER);\n\n\n\n  React.useEffect(() => {\n    const isOrder = Object.values(record).every(el => Boolean(el));\n    isOrder ? setDisabled(false) : setDisabled(true);\n  }, [record]);\n\n\n  function handleChange(event, data) {\n    const { name, value, text, files } = event.target;\n    if (name === \"media\") {\n      setRecord(prevState => ({ ...prevState, media: files[0] }\n      ));\n      setMediaPreview(window.URL.createObjectURL(files[0]));\n    } else {\n    setRecord(prevState => ({ ...prevState, [name]: value }));\n    //setStatus(prevState => ({ ...prevState, [name]: data }));\n    console.log(INITIAL_ORDER);\n  }\n}\n\nfunction handleSelect(event, data) {\n  const { orderStatus, value } = event.target;\n    console.log(data.value);\n    //handleChange;\n    setRecord(prevState => ({ ...prevState, [orderStatus]: data.value }));\n    console.log(INITIAL_ORDER);\n}\n\nasync function handleImageUpload() {\n  const data = new FormData()\n  data.append('file', record.media)\n  data.append('upload_preset', 'builders-log')\n  data.append('cloud_name', 'dtan19')\n  const response = await axios.post(process.env.CLOUDINARY_URL, data);\n  const mediaUrl = response.data.url;\n  console.log(mediaUrl);\n  return mediaUrl;\n}\n\nasync function handleSubmit(event) {\n  try {\n    event.preventDefault();\n    setLoading(true);\n    setError('');\n    const mediaUrl = await handleImageUpload();\n    const url = `${baseUrl}/api/order`\n    const { name, phone, email, notes, orderStatus, total  } = record;\n    const payload = { mediaUrl, name, phone, email, notes, orderStatus, total }\n    const response = await axios.post(url, payload);\n    //console.log({ response });\n    setRecord(INITIAL_ORDER);\n    setSuccess(true);\n    const orderId = response.data._id;\n    Router.push(`/order?_id=${orderId}`)\n  } catch(error) {\n    catchErrors(error, setError)\n  } finally {\n    setLoading(false);\n  }\n\n}\n\n  return (\n    <>\n      <Header as=\"h2\" block>\n        <Icon name='add' color=\"orange\" />\n        Create an Order\n      </Header>\n      <Form loading={loading} error={Boolean(error)} success={success} onSubmit={handleSubmit} >\n      <Message \n        error\n        header=\"Oops!\"\n        content={error}\n        />\n        <Message \n        success\n        icon=\"check\"\n        header=\"Success\"\n        content=\"Your order has been created\"\n        />\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            control={Input}\n            name=\"media\"\n            type=\"file\"\n            label=\"Media\"\n            //accept=\"image/*\"\n            content=\"Select Image\"\n            onChange={handleChange}\n            required\n          />\n        </Form.Group>\n        <Image src={mediaPreview} rounded centered size=\"small\"/>\n        <Form.Group>\n          <p>Create your own order:</p>\n        </Form.Group>\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            control={Input}\n            name=\"name\"\n            label=\"Name\"\n            placeholder=\"Jane Smith\"\n            value={record.name}\n            onChange={handleChange}\n            required\n          />\n        </Form.Group>\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            control={Input}\n            name=\"phone\"\n            label=\"Phone\"\n            placeholder=\"801-555-1234\"\n            value={record.phone}\n            onChange={handleChange}\n            required\n          />\n        </Form.Group>\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            control={Input}\n            name=\"email\"\n            label=\"Email\"\n            placeholder=\"name@email.com\"\n            value={record.email}\n            onChange={handleChange}\n            required\n          />\n        </Form.Group>\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            control={TextArea}\n            name=\"notes\"\n            label=\"Notes\"\n            placeholder=\"Type any special instructions here.\"\n            value={record.notes}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Dropdown\n            selection\n            name=\"orderStatus\"\n            label=\"Status\"\n            placeholder=\"Open\"\n            options={statusOptions}\n            onChange={handleSelect}\n          />\n          <Form.Field\n            control={Input}\n            name=\"total\"\n            label=\"Total\"\n            placeholder=\"3.99\"\n            value={record.total}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Field\n          control={Button}\n          //disabled={disabled || loading}\n          color=\"blue\"\n          content=\"Create\"\n          type=\"Submit\"\n        />\n      </Form>\n    </>\n  )\n}\n\nexport default CreateOrder;\n\n\n"],"mappings":"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","sourceRoot":""}
{"ast":null,"code":"import Coin from '../../models/Coin';\nimport connectDb from \"../../utils/connectDb\";\nconnectDb();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await handleGetRequest(req, res);\n      break;\n\n    case \"POST\":\n      await handlePostRequest(req, res);\n      break;\n\n    case \"DELETE\":\n      await handleDeleteRequest(req, res);\n      break;\n\n    default:\n      res.status(405).send(`Method ${req.method} not allowed`);\n      break;\n  }\n});\n\nasync function handleGetRequest(req, res) {\n  const {\n    _id\n  } = req.query;\n  const coin = await Coin.findOne({\n    _id\n  });\n  res.status(200).json(coin);\n}\n\nasync function handlePostRequest(req, res) {\n  const {\n    mediaUrl,\n    year,\n    mint,\n    era,\n    grade,\n    index\n  } = req.body;\n\n  try {\n    if (!year || !index || !mediaUrl) {\n      return res.status(422).send(\"missing one or more fields\");\n    }\n\n    const coin = await new Coin({\n      year,\n      mint,\n      era,\n      grade,\n      index,\n      mediaUrl\n    }).save();\n    res.status(201).json(coin);\n    console.log(coin);\n  } catch (error) {\n    console.error(error);\n    res.status(500).send(\"Server failed to create sheet.\");\n  }\n}\n\nasync function handleDeleteRequest(req, res) {\n  const {\n    _id\n  } = req.query;\n  await Coin.findOneAndDelete({\n    _id\n  });\n  res.status(204).json({});\n}","map":null,"metadata":{},"sourceType":"module"}
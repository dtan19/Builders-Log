{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nvar _jsxFileName = \"/Users/david/Dev/myapps/Builders-Log/pages/createlog.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Form, Input, Dropdown, TextArea, Button, Image, Message, Header, Icon } from 'semantic-ui-react';\nimport axios from 'axios';\nimport baseUrl from '../utils/baseUrl';\nimport catchErrors from '../utils/catchErrors';\nconst INITIAL_LOG = {\n  date: \"\",\n  logTypeSelected: \"\",\n  hours: \"\",\n  amount: \"\",\n  description: \"\",\n  notes: \"\"\n};\nconst logTypeOptions = [{\n  key: 'Assembly',\n  text: 'Assembly',\n  value: 'Assembly'\n}, {\n  key: 'Research',\n  text: 'Research',\n  value: 'Research'\n}, {\n  key: 'Design',\n  text: 'Design',\n  value: 'Design'\n}, {\n  key: 'Purchase',\n  text: 'Purchase',\n  value: 'Purchase'\n}, {\n  key: 'Testing',\n  text: 'Testing',\n  value: 'Testing'\n}];\n\nfunction CreateLog() {\n  const [log, setLog] = React.useState(INITIAL_LOG);\n  const [mediaPreview, setMediaPreview] = React.useState('');\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [disabled, setDisabled] = React.useState(true);\n  const [error, setError] = React.useState('');\n  const [logType, setLogType] = React.useState('');\n  React.useEffect(() => {\n    const isLog = _Object$values(log).every(el => Boolean(el));\n\n    isLog ? setDisabled(false) : setDisabled(true);\n  }, [log]);\n\n  function handleChange(event) {\n    const {\n      name,\n      value,\n      files\n    } = event.target;\n\n    if (name === \"media\") {\n      setLog(prevState => _objectSpread({}, prevState, {\n        media: files[0]\n      }));\n      setMediaPreview(window.URL.createObjectURL(files[0]));\n    } else {\n      setLog(prevState => _objectSpread({}, prevState, {\n        [name]: value\n      }));\n    }\n  }\n\n  async function handleImageUpload() {\n    const data = new FormData();\n    data.append('file', log.media);\n    data.append('upload_preset', 'builders-log');\n    data.append('cloud_name', 'dtan19');\n    const response = await axios.post(process.env.CLOUDINARY_URL, data);\n    const mediaUrl = response.data.url;\n    return mediaUrl;\n  }\n\n  async function handleSubmit(event) {\n    try {\n      event.preventDefault();\n      setLoading(true);\n      setError('');\n      const mediaUrl = await handleImageUpload();\n      const url = `${baseUrl}/api/logs`;\n      const {\n        date,\n        hours,\n        type,\n        description,\n        notes\n      } = log;\n      const payload = {\n        date,\n        hours,\n        type,\n        description,\n        notes,\n        mediaUrl\n      };\n      const response = await axios.post(url, payload);\n      console.log({\n        response\n      });\n      setLog(INITIAL_LOG);\n      setSuccess(true);\n    } catch (error) {\n      catchErrors(error, setError);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  function handleLogType() {\n    if (logTypeSelected === \"Purchase\") {\n      setLogType(prevState => _objectSpread({}, prevState, {\n        [logTypeSelected]: value\n      }));\n    } else {\n      console.log(setLogType);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    as: \"h2\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"add\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), \"Create New Log\"), __jsx(Form, {\n    loading: loading,\n    error: Boolean(error),\n    success: success,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), __jsx(Message, {\n    success: true,\n    icon: \"check\",\n    header: \"Success\",\n    content: \"Your log has been posted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), __jsx(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Form.Field, {\n    control: Input,\n    name: \"date\",\n    label: \"Date\",\n    type: \"date\",\n    placeholder: \"Date\",\n    value: log.date,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), __jsx(Form.Field, {\n    control: Dropdown,\n    name: \"type\",\n    label: \"Log Type\",\n    type: \"text\",\n    placeholder: \"Log Type\",\n    options: logTypeOptions,\n    onChange: handleLogType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), setLogType ? __jsx(Form.Field, {\n    control: Input,\n    name: \"hours\",\n    label: \"Hours\",\n    placeholder: \"0.00\",\n    min: \"0.25\",\n    step: \"0.25\",\n    type: \"number\",\n    value: log.hours,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }) : __jsx(Form.Field, {\n    control: Input,\n    name: \"amount\",\n    label: \"Purchase Amount\",\n    placeholder: \"0.00\",\n    min: \"0.00\",\n    step: \"0.01\",\n    type: \"number\",\n    value: log.amount,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })), __jsx(Image, {\n    src: mediaPreview,\n    rounded: true,\n    centered: true,\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }), __jsx(Form.Field, {\n    control: TextArea,\n    name: \"description\",\n    label: \"Description\",\n    placeholder: \"Description\",\n    value: log.description,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }), __jsx(Form.Field, {\n    control: TextArea,\n    name: \"notes\",\n    label: \"Notes\",\n    placeholder: \"Notes\",\n    value: log.notes,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), __jsx(Form.Field, {\n    control: Button,\n    disabled: disabled || loading,\n    color: \"blue\",\n    icon: \"pencil alternate\",\n    content: \"Submit\",\n    type: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })));\n}\n\nexport default CreateLog;","map":{"version":3,"sources":["/Users/david/Dev/myapps/Builders-Log/pages/createlog.js"],"names":["React","Form","Input","Dropdown","TextArea","Button","Image","Message","Header","Icon","axios","baseUrl","catchErrors","INITIAL_LOG","date","logTypeSelected","hours","amount","description","notes","logTypeOptions","key","text","value","CreateLog","log","setLog","useState","mediaPreview","setMediaPreview","success","setSuccess","loading","setLoading","disabled","setDisabled","error","setError","logType","setLogType","useEffect","isLog","every","el","Boolean","handleChange","event","name","files","target","prevState","media","window","URL","createObjectURL","handleImageUpload","data","FormData","append","response","post","process","env","CLOUDINARY_URL","mediaUrl","url","handleSubmit","preventDefault","type","payload","console","handleLogType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { \n  Form, \n  Input, \n  Dropdown,\n  TextArea, \n  Button, \n  Image, \n  Message, \n  Header, \n  Icon\n } from 'semantic-ui-react';\n import axios from 'axios';\n import baseUrl from '../utils/baseUrl';\n import catchErrors from '../utils/catchErrors';\n\n const INITIAL_LOG = {\n    date: \"\",\n    logTypeSelected: \"\",\n    hours: \"\",\n    amount: \"\",\n    description: \"\",\n    notes: \"\",\n };\n\n const logTypeOptions = [\n  {\n    key: 'Assembly',\n    text: 'Assembly',\n    value: 'Assembly',\n  }, \n  {\n    key: 'Research',\n    text: 'Research',\n    value: 'Research',\n  },\n  {\n    key: 'Design',\n    text: 'Design',\n    value: 'Design',\n  },\n  {\n    key: 'Purchase',\n    text: 'Purchase',\n    value: 'Purchase',\n  },\n  {\n    key: 'Testing',\n    text: 'Testing',\n    value: 'Testing',\n  },\n ]\n\n\nfunction CreateLog() {\n  const [log, setLog] = React.useState(INITIAL_LOG);\n  const [mediaPreview, setMediaPreview] = React.useState('');\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [disabled, setDisabled] = React.useState(true);\n  const [error, setError] = React.useState('');\n  const [logType, setLogType] = React.useState('');\n\n  React.useEffect(() => {\n    const isLog = Object.values(log).every(el => Boolean(el))\n    isLog ? setDisabled(false) : setDisabled(true);\n  }, [log]);\n\n\nfunction handleChange(event) {\n  const { name, value, files } = event.target;\n  if (name === \"media\") {\n    setLog(prevState => ({ ...prevState, media: files[0] }\n    ));\n    setMediaPreview(window.URL.createObjectURL(files[0]));\n  } else {\n    setLog(prevState => ({ ...prevState, [name]: value }));\n  }\n}\n\nasync function handleImageUpload() {\n  const data = new FormData()\n  data.append('file', log.media)\n  data.append('upload_preset', 'builders-log')\n  data.append('cloud_name', 'dtan19')\n  const response = await axios.post(process.env.CLOUDINARY_URL, data);\n  const mediaUrl = response.data.url;\n  return mediaUrl;\n}\n\nasync function handleSubmit(event) {\n  try {\n    event.preventDefault();\n    setLoading(true);\n    setError('');\n    const mediaUrl = await handleImageUpload();\n    const url = `${baseUrl}/api/logs`\n    const { date, hours, type, description, notes } = log;\n    const payload = { date, hours, type, description, notes, mediaUrl }\n    const response = await axios.post(url, payload);\n    console.log({ response });\n    setLog(INITIAL_LOG);\n    setSuccess(true);\n  } catch(error) {\n    catchErrors(error, setError)\n  } finally {\n    setLoading(false);\n  }\n\n}\n\nfunction handleLogType() {\n  if (logTypeSelected === \"Purchase\") {\n    setLogType(prevState => ({ ...prevState, [logTypeSelected]: value }));\n  } else {\n    console.log(setLogType);\n  }\n}\n\n\n  return (\n    <>\n      <Header as=\"h2\" block>\n        <Icon name='add' color=\"blue\" />\n        Create New Log\n      </Header>\n      <Form loading={loading} error={Boolean(error)} success={success} onSubmit={handleSubmit} >\n      <Message \n        error\n        header=\"Oops!\"\n        content={error}\n        />\n        <Message \n        success\n        icon=\"check\"\n        header=\"Success\"\n        content=\"Your log has been posted\"\n        />\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            control={Input}\n            name=\"date\"\n            label=\"Date\"\n            type=\"date\"\n            placeholder=\"Date\"\n            value={log.date}\n            onChange={handleChange}\n          />\n          <Form.Field\n            control={Dropdown}\n            name=\"type\"\n            label=\"Log Type\"\n            type=\"text\"\n            placeholder=\"Log Type\"\n            options={logTypeOptions}\n            onChange={handleLogType}\n          />\n          {setLogType ?(\n          <Form.Field\n            control={Input}\n            name=\"hours\"\n            label=\"Hours\"\n            placeholder=\"0.00\"\n            min=\"0.25\"\n            step=\"0.25\"\n            type=\"number\"\n            value={log.hours}\n            onChange={handleChange}\n          />)\n          :\n          (\n          <Form.Field\n            control={Input}\n            name=\"amount\"\n            label=\"Purchase Amount\"\n            placeholder=\"0.00\"\n            min=\"0.00\"\n            step=\"0.01\"\n            type=\"number\"\n            value={log.amount}\n            onChange={handleChange}\n          />)}\n        </Form.Group>\n        <Image src={mediaPreview} rounded centered size=\"small\"\n        />\n        <Form.Field\n          control={TextArea}\n          name=\"description\"\n          label=\"Description\"\n          placeholder=\"Description\"\n          value={log.description}\n          onChange={handleChange}\n        />\n        <Form.Field\n          control={TextArea}\n          name=\"notes\"\n          label=\"Notes\"\n          placeholder=\"Notes\"\n          value={log.notes}\n          onChange={handleChange}\n        />\n        <Form.Field\n          control={Button}\n          disabled={disabled || loading}\n          color=\"blue\"\n          icon=\"pencil alternate\"\n          content=\"Submit\"\n          type=\"Submit\"\n        />\n      </Form>\n    </>\n  )\n}\n\nexport default CreateLog;\n"]},"metadata":{},"sourceType":"module"}
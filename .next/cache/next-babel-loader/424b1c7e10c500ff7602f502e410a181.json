{"ast":null,"code":"import Sheet from '../../models/Sheet';\nimport connectDb from \"../../utils/connectDb\";\nconnectDb();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await handleGetRequest(req, res);\n      break;\n\n    case \"POST\":\n      await handlePostRequest(req, res);\n      break;\n\n    case \"DELETE\":\n      await handleDeleteRequest(req, res);\n      break;\n\n    default:\n      res.status(405).send(`Method ${req.method} not allowed`);\n      break;\n  }\n});\n\nasync function handleGetRequest(req, res) {\n  const {\n    _id\n  } = req.query;\n  const sheet = await Sheet.findOne({\n    _id\n  });\n  res.status(200).json(sheet);\n}\n\nasync function handlePostRequest(req, res) {\n  const {\n    mediaUrl,\n    name,\n    columns,\n    rows\n  } = req.body;\n\n  try {\n    if (!name || !columns || !rows || !mediaUrl) {\n      return res.status(422).send(\"missing one or more fields\");\n    }\n\n    const sheet = await new Sheet({\n      name,\n      columns,\n      rows,\n      mediaUrl\n    }).save();\n    res.status(201).json(sheet);\n  } catch (error) {\n    console.error(error);\n    res.status(500).send(\"Server failed to create sheet.\");\n  }\n}\n\nasync function handleDeleteRequest(req, res) {\n  const {\n    _id\n  } = req.query;\n  await Sheet.findOneAndDelete({\n    _id\n  });\n  res.status(204).json({});\n} //export default async (req, res) => {\n//    const { _id } = req.query\n//    const product = await Product.findOne({ _id })\n//    res.status(200).json(product)\n//};","map":{"version":3,"sources":["/Users/david/Dev/myapps/Builders-Log/pages/api/sheet.js"],"names":["Sheet","connectDb","req","res","method","handleGetRequest","handlePostRequest","handleDeleteRequest","status","send","_id","query","sheet","findOne","json","mediaUrl","name","columns","rows","body","save","error","console","findOneAndDelete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEAA,SAAS;AAET,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,UAAQD,GAAG,CAACE,MAAZ;AACI,SAAK,KAAL;AACI,YAAMC,gBAAgB,CAACH,GAAD,EAAMC,GAAN,CAAtB;AACA;;AACJ,SAAK,MAAL;AACI,YAAMG,iBAAiB,CAACJ,GAAD,EAAMC,GAAN,CAAvB;AACA;;AACJ,SAAK,QAAL;AACI,YAAMI,mBAAmB,CAACL,GAAD,EAAMC,GAAN,CAAzB;AACA;;AACJ;AACIA,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB,UAASP,GAAG,CAACE,MAAO,cAA1C;AACA;AAZR;AAcH,CAfD;;AAiBA,eAAeC,gBAAf,CAAgCH,GAAhC,EAAqCC,GAArC,EAA0C;AACtC,QAAM;AAAEO,IAAAA;AAAF,MAAUR,GAAG,CAACS,KAApB;AACA,QAAMC,KAAK,GAAG,MAAMZ,KAAK,CAACa,OAAN,CAAc;AAAEH,IAAAA;AAAF,GAAd,CAApB;AACAP,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqBF,KAArB;AACH;;AAED,eAAeN,iBAAf,CAAiCJ,GAAjC,EAAsCC,GAAtC,EAA2C;AACvC,QAAM;AAAEY,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,MAAoChB,GAAG,CAACiB,IAA9C;;AACA,MAAI;AACA,QAAK,CAACH,IAAD,IAAS,CAACC,OAAV,IAAqB,CAACC,IAAtB,IAA8B,CAACH,QAApC,EAA+C;AAC3C,aAAOZ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,4BAArB,CAAP;AACH;;AACD,UAAMG,KAAK,GAAG,MAAM,IAAIZ,KAAJ,CAAU;AAC1BgB,MAAAA,IAD0B;AAE1BC,MAAAA,OAF0B;AAG1BC,MAAAA,IAH0B;AAI1BH,MAAAA;AAJ0B,KAAV,EAKjBK,IALiB,EAApB;AAMAjB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqBF,KAArB;AACH,GAXD,CAWE,OAAMS,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAlB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gCAArB;AACH;AACJ;;AAED,eAAeF,mBAAf,CAAmCL,GAAnC,EAAwCC,GAAxC,EAA6C;AACzC,QAAM;AAAEO,IAAAA;AAAF,MAAUR,GAAG,CAACS,KAApB;AACA,QAAMX,KAAK,CAACuB,gBAAN,CAAuB;AAAEb,IAAAA;AAAF,GAAvB,CAAN;AACAP,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB,EAArB;AACH,C,CACD;AACA;AACA;AACA;AACA","sourcesContent":["import Sheet from '../../models/Sheet'\nimport connectDb from \"../../utils/connectDb\";\n\nconnectDb();\n\nexport default async (req, res) => {\n    switch (req.method) {\n        case \"GET\":\n            await handleGetRequest(req, res);\n            break;\n        case \"POST\":\n            await handlePostRequest(req, res);\n            break;\n        case \"DELETE\":\n            await handleDeleteRequest(req, res);\n            break;\n        default:\n            res.status(405).send(`Method ${req.method} not allowed`);\n            break;\n    }\n};\n\nasync function handleGetRequest(req, res) {\n    const { _id } = req.query\n    const sheet = await Sheet.findOne({ _id })\n    res.status(200).json(sheet)\n}\n\nasync function handlePostRequest(req, res) {\n    const { mediaUrl, name, columns, rows } = req.body\n    try {\n        if ( !name || !columns || !rows || !mediaUrl ) {\n            return res.status(422).send(\"missing one or more fields\");\n        }\n        const sheet = await new Sheet({\n            name,\n            columns,\n            rows,\n            mediaUrl\n        }).save();\n        res.status(201).json(sheet);\n    } catch(error) {\n        console.error(error);\n        res.status(500).send(\"Server failed to create sheet.\")\n    }\n}\n\nasync function handleDeleteRequest(req, res) {\n    const { _id } = req.query\n    await Sheet.findOneAndDelete({ _id })\n    res.status(204).json({})\n}\n//export default async (req, res) => {\n//    const { _id } = req.query\n//    const product = await Product.findOne({ _id })\n//    res.status(200).json(product)\n//};\n\n"]},"metadata":{},"sourceType":"module"}
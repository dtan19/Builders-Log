{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Segment } from 'semantic-ui-react';\nimport CartItemList from '../components/Cart/CartItemList';\nimport CartSummary from '../components/Cart/CartSummary';\nimport { parseCookies } from 'nookies';\nimport axios from 'axios';\nimport cookie from 'js-cookie';\nimport baseUrl from '../utils/baseUrl';\nimport catchErrors from '../utils/catchErrors';\n\nfunction Cart(_ref) {\n  var products = _ref.products,\n      user = _ref.user;\n\n  var _React$useState = React.useState(products),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cartProducts = _React$useState2[0],\n      setCartProducts = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      success = _React$useState4[0],\n      setSuccess = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      loading = _React$useState6[0],\n      setLoading = _React$useState6[1];\n\n  function handleRemoveFromCart(productId) {\n    var url, token, payload, response;\n    return _regeneratorRuntime.async(function handleRemoveFromCart$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = \"\".concat(baseUrl, \"/api/cart\");\n            token = cookie.get('token');\n            payload = {\n              params: {\n                productId: productId\n              },\n              headers: {\n                Authorization: token\n              }\n            };\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios[\"delete\"](url, payload));\n\n          case 5:\n            response = _context.sent;\n            setCartProducts(response.data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  }\n\n  function handleCheckout(paymentData) {\n    var url, token, payload, headers;\n    return _regeneratorRuntime.async(function handleCheckout$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            setLoading(true);\n            url = \"\".concat(baseUrl, \"/api/checkout\");\n            token = cookie.get('token');\n            payload = {\n              paymentData: paymentData\n            };\n            headers = {\n              headers: {\n                Authorization: token\n              }\n            };\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(axios.post(url, payload, headers));\n\n          case 8:\n            setSuccess(true);\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            catchErrors(_context2.t0, window.alert);\n\n          case 14:\n            _context2.prev = 14;\n            setLoading(false);\n            return _context2.finish(14);\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 11, 14, 17]], _Promise);\n  }\n\n  return __jsx(Segment, {\n    loading: loading\n  }, __jsx(CartItemList, {\n    handleRemoveFromCart: handleRemoveFromCart,\n    user: user,\n    products: cartProducts,\n    success: success\n  }), __jsx(CartSummary, {\n    products: cartProducts,\n    handleCheckout: handleCheckout,\n    success: success\n  }));\n}\n\nCart.getInitialProps = function _callee(ctx) {\n  var _parseCookies, token, url, payload, response;\n\n  return _regeneratorRuntime.async(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _parseCookies = parseCookies(ctx), token = _parseCookies.token;\n\n          if (token) {\n            _context3.next = 3;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", {\n            products: []\n          });\n\n        case 3:\n          url = \"\".concat(baseUrl, \"/api/cart\");\n          payload = {\n            headers: {\n              Authorization: token\n            }\n          };\n          _context3.next = 7;\n          return _regeneratorRuntime.awrap(axios.get(url, payload));\n\n        case 7:\n          response = _context3.sent;\n          return _context3.abrupt(\"return\", {\n            products: response.data\n          });\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\n\nexport default Cart;","map":null,"metadata":{},"sourceType":"module"}
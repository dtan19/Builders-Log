{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport App from \"next/app\";\nimport Layout from \"../components/_App/Layout\";\nimport { parseCookies, destroyCookie } from 'nookies';\nimport { redirectUser } from '../utils/auth';\nimport baseUrl from '../utils/baseUrl';\nimport axios from \"axios\";\nimport Router from 'next/router';\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"syncLogout\", function (event) {\n      if (event.key === 'logout') {\n        Router.push('/login');\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('storage', this.syncLogout);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(Layout, pageProps, __jsx(Component, pageProps));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var Component, ctx, _parseCookies, token, pageProps, isProtectedRoute, payload, url, response, user, isRoot, isAdmin, isNotPermitted;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, ctx = _ref.ctx;\n              _parseCookies = parseCookies(ctx), token = _parseCookies.token;\n              pageProps = {};\n\n              if (!Component.getInitialProps) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 6:\n              pageProps = _context.sent;\n\n            case 7:\n              if (token) {\n                _context.next = 12;\n                break;\n              }\n\n              isProtectedRoute = ctx.pathname === '/account' || ctx.pathname === '/create';\n\n              if (isProtectedRoute) {\n                redirectUser(ctx, '/login');\n              }\n\n              _context.next = 31;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              payload = {\n                headers: {\n                  Authorization: token\n                }\n              };\n              url = \"\".concat(baseUrl, \"/api/account\");\n              _context.next = 17;\n              return _regeneratorRuntime.awrap(axios.get(url, payload));\n\n            case 17:\n              response = _context.sent;\n              user = response.data;\n              isRoot = user.role === 'root';\n              isAdmin = user.role === 'admin'; // If authenticated, but not of role admin, or root, we want to redirect from '/create' page.\n\n              isNotPermitted = !(isRoot || isAdmin) && ctx.pathname === '/create';\n\n              if (isNotPermitted) {\n                redirectUser(ctx, '/');\n              }\n\n              pageProps.user = user;\n              _context.next = 31;\n              break;\n\n            case 26:\n              _context.prev = 26;\n              _context.t0 = _context[\"catch\"](12);\n              console.error(\"Error getting current user.\", _context.t0); // Throw out invalid token\n\n              destroyCookie(ctx, \"token\"); // Redirect to login page\n\n              redirectUser(ctx, \"/login\");\n\n            case 31:\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps\n              });\n\n            case 32:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[12, 26]], _Promise);\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}
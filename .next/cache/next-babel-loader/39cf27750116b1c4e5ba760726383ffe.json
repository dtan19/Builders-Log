{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/david/Dev/myapps/Builders-Log/components/Account/AccountPermissions.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport { Header, Checkbox, Table, Icon } from 'semantic-ui-react';\nimport cookie from 'js-cookie';\nimport baseUrl from '../../utils/baseUrl';\n\nfunction AccountPermissions() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      users = _React$useState2[0],\n      setUsers = _React$useState2[1];\n\n  React.useEffect(function () {\n    getUsers();\n  }, []);\n\n  function getUsers() {\n    var url, token, payload, response;\n    return _regeneratorRuntime.async(function getUsers$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = \"\".concat(baseUrl, \"/api/users\");\n            token = cookie.get(\"token\");\n            payload = {\n              headers: {\n                Authorization: token\n              }\n            };\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.get(url, payload));\n\n          case 5:\n            response = _context.sent;\n            setUsers(response.data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(\"div\", {\n    style: {\n      margin: '2em 0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), \"User Permissions\"), __jsx(Table, {\n    compact: true,\n    celled: true,\n    definition: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), __jsx(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Name\"), __jsx(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Email\"), __jsx(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Joined\"), __jsx(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Updated\"), __jsx(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Role\"))), __jsx(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, users.map(function (user) {\n    return __jsx(UserPermission, {\n      key: user._id,\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }))));\n}\n\nfunction UserPermission(_ref) {\n  var user = _ref.user;\n\n  var _React$useState3 = React.useState(user.role === 'admin'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      admin = _React$useState4[0],\n      setAdmin = _React$useState4[1];\n\n  var isFirstRun = React.useRef(true);\n  React.useEffect(function () {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    updatePermission();\n  }, [admin]);\n\n  function handleChangePermission() {\n    setAdmin(function (prevState) {\n      return !prevState;\n    });\n  }\n\n  function updatePermission() {\n    var url, payload, response;\n    return _regeneratorRuntime.async(function updatePermission$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            url = \"\".concat(baseUrl, \"/api/account\");\n            payload = {\n              _id: user._id,\n              role: admin ? \"admin\" : \"user\"\n            };\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(axios.put(url, payload));\n\n          case 4:\n            response = _context2.sent;\n            console.log;\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Table.Cell, {\n    collapsing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    checked: admin,\n    toggle: true,\n    onChange: handleChangePermission,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), __jsx(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, user.name), __jsx(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, user.email), __jsx(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, user.createdAt), __jsx(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, user.updatedAt), __jsx(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, admin ? \"admin\" : \"user\"));\n}\n\nexport default AccountPermissions;","map":{"version":3,"sources":["/Users/david/Dev/myapps/Builders-Log/components/Account/AccountPermissions.js"],"names":["React","axios","Header","Checkbox","Table","Icon","cookie","baseUrl","AccountPermissions","useState","users","setUsers","useEffect","getUsers","url","token","get","payload","headers","Authorization","response","data","margin","map","user","_id","UserPermission","role","admin","setAdmin","isFirstRun","useRef","current","updatePermission","handleChangePermission","prevState","put","console","log","name","email","createdAt","updatedAt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Header, Checkbox, Table, Icon } from 'semantic-ui-react';\nimport cookie from 'js-cookie';\nimport baseUrl from '../../utils/baseUrl';\n\n\nfunction AccountPermissions() {\n  const [users, setUsers] = React.useState([])\n\n  React.useEffect(() => {\n    getUsers();\n  }, []);\n\n  async function getUsers() {\n    const url = `${baseUrl}/api/users`;\n    const token = cookie.get(\"token\");\n    const payload = { headers: { Authorization: token }};\n    const response = await axios.get(url, payload);\n    setUsers(response.data);\n  }\n\n  return (\n    <div style={{ margin: '2em 0'}}>\n      <Header as=\"h2\">\n        <Icon name=\"settings\"/>\n        User Permissions\n      </Header>\n      <Table compact celled definition>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell/>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Email</Table.HeaderCell>\n            <Table.HeaderCell>Joined</Table.HeaderCell>\n            <Table.HeaderCell>Updated</Table.HeaderCell>\n            <Table.HeaderCell>Role</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {users.map(user => (\n            <UserPermission key={user._id} user={user} />\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n}\n\nfunction UserPermission({ user }) {\n   const [admin, setAdmin] = React.useState(user.role === 'admin')\n  const isFirstRun = React.useRef(true)\n\n  React.useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    updatePermission(); \n  }, [admin])\n\n  function handleChangePermission() {\n    setAdmin(prevState => !prevState)\n  }\n\n  async function updatePermission() {\n    const url = `${baseUrl}/api/account`;\n    const payload = { _id: user._id, role: admin ? \"admin\" : \"user\"};\n    const response = await axios.put(url, payload);\n    console.log\n  }\n\n  return (\n    <Table.Row>\n      <Table.Cell collapsing>\n        <Checkbox checked={admin} toggle onChange={handleChangePermission}/>\n      </Table.Cell>\n      <Table.Cell>{user.name}</Table.Cell>\n      <Table.Cell>{user.email}</Table.Cell>\n      <Table.Cell>{user.createdAt}</Table.Cell>\n      <Table.Cell>{user.updatedAt}</Table.Cell>\n      <Table.Cell>{admin ? \"admin\" : \"user\"}</Table.Cell>\n    </Table.Row>\n  )\n}\n\nexport default AccountPermissions;\n"]},"metadata":{},"sourceType":"module"}
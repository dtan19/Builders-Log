{"ast":null,"code":"var _jsxFileName = \"/Users/david/Dev/myapps/Builders-Log/pages/createorder.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Form, Item, Input, TextArea, Dropdown, Button, Image, Message, Header, Icon } from 'semantic-ui-react';\nimport axios from 'axios';\nimport baseUrl from '../utils/baseUrl';\nimport catchErrors from '../utils/catchErrors';\nimport Router from 'next/router';\nconst INITIAL_ORDER = {\n  user: \"\",\n  products: \"\",\n  name: \"\",\n  phone: \"\",\n  email: \"\",\n  notes: \"\",\n  orderStatus: \"\",\n  total: \"\",\n  media: \"\"\n};\nconst statusOptions = [{\n  key: \"Open\",\n  text: \"Open\",\n  value: \"Open\"\n}, {\n  key: \"Complete\",\n  text: \"Complete\",\n  value: \"Complete\"\n}];\nconst eraSelection = \"50's\";\n\nfunction CreateOrder(_id, user) {\n  const [record, setRecord] = React.useState(INITIAL_ORDER);\n  const [mediaPreview, setMediaPreview] = React.useState('');\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [disabled, setDisabled] = React.useState(true);\n  const [error, setError] = React.useState('');\n  const [status, setStatus] = React.useState(INITIAL_ORDER);\n  React.useEffect(() => {\n    const isOrder = Object.values(record).every(el => Boolean(el));\n    isOrder ? setDisabled(false) : setDisabled(true);\n  }, [record]);\n\n  function handleChange(event) {\n    const {\n      name,\n      value,\n      files\n    } = event.target;\n\n    if (name === \"media\") {\n      setRecord(prevState => _objectSpread({}, prevState, {\n        media: files[0]\n      }));\n      setMediaPreview(window.URL.createObjectURL(files[0]));\n    } else {\n      setRecord(prevState => _objectSpread({}, prevState, {\n        [name]: value\n      }));\n    }\n  }\n\n  function handleSelect(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setStatus(prevState => _objectSpread({}, prevState, {\n      [name]: value\n    }));\n    console.log(INITIAL_ORDER.era);\n    handleChange;\n  }\n\n  async function handleImageUpload() {\n    const data = new FormData();\n    data.append('file', record.media);\n    data.append('upload_preset', 'builders-log');\n    data.append('cloud_name', 'dtan19');\n    const response = await axios.post(process.env.CLOUDINARY_URL, data);\n    const mediaUrl = response.data.url;\n    return mediaUrl;\n  }\n\n  async function handleSubmit(event) {\n    try {\n      event.preventDefault();\n      setLoading(true);\n      setError('');\n      const mediaUrl = await handleImageUpload();\n      const url = `${baseUrl}/api/order`;\n      const {\n        user,\n        products,\n        name,\n        phone,\n        email,\n        notes,\n        orderStatus,\n        total\n      } = record;\n      const payload = {\n        mediaUrl,\n        user,\n        products,\n        name,\n        phone,\n        email,\n        notes,\n        orderStatus,\n        total\n      };\n      const response = await axios.post(url, payload); //console.log({ response });\n\n      setRecord(INITIAL_ORDER);\n      setSuccess(true);\n      const orderId = response.data._id;\n      Router.push(`/order?_id=${orderId}`);\n    } catch (error) {\n      catchErrors(error, setError);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    as: \"h2\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"add\",\n    color: \"orange\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), \"Create an Order\"), __jsx(Form, {\n    loading: loading,\n    error: Boolean(error),\n    success: success,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), __jsx(Message, {\n    success: true,\n    icon: \"check\",\n    header: \"Success\",\n    content: \"Your order has been created\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), __jsx(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(Form.Field, {\n    control: Input,\n    name: \"media\",\n    type: \"file\",\n    label: \"Media\" //accept=\"image/*\"\n    ,\n    content: \"Select Image\",\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), __jsx(Image, {\n    src: mediaPreview,\n    rounded: true,\n    centered: true,\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), __jsx(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Create your own order:\")), __jsx(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(Form.Field, {\n    control: Input,\n    name: \"name\",\n    label: \"Name\",\n    placeholder: \"Jane Smith\",\n    value: record.name,\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), __jsx(Form.Field, {\n    control: Input,\n    name: \"phone\",\n    label: \"Phone\",\n    placeholder: \"801-555-1234\",\n    value: record.phone,\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })), __jsx(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, __jsx(Form.Field, {\n    control: TextArea,\n    name: \"notes\",\n    label: \"Notes\",\n    placeholder: \"Type any special instructions here.\",\n    value: record.notes,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })), __jsx(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, __jsx(Form.Dropdown, {\n    selection: true,\n    name: \"orderStatus\",\n    label: \"Status\",\n    placeholder: \"Open\",\n    options: statusOptions,\n    value: record.orderStatus,\n    onChange: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), __jsx(Form.Field, {\n    control: Input,\n    name: \"total\",\n    label: \"Total\",\n    placeholder: \"3.99\",\n    value: record.total,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  })), __jsx(Form.Field, {\n    control: Button //disabled={disabled || loading}\n    ,\n    color: \"blue\",\n    content: \"Create\",\n    type: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  })));\n}\n\nexport default CreateOrder;","map":{"version":3,"sources":["/Users/david/Dev/myapps/Builders-Log/pages/createorder.js"],"names":["React","Form","Item","Input","TextArea","Dropdown","Button","Image","Message","Header","Icon","axios","baseUrl","catchErrors","Router","INITIAL_ORDER","user","products","name","phone","email","notes","orderStatus","total","media","statusOptions","key","text","value","eraSelection","CreateOrder","_id","record","setRecord","useState","mediaPreview","setMediaPreview","success","setSuccess","loading","setLoading","disabled","setDisabled","error","setError","status","setStatus","useEffect","isOrder","Object","values","every","el","Boolean","handleChange","event","files","target","prevState","window","URL","createObjectURL","handleSelect","console","log","era","handleImageUpload","data","FormData","append","response","post","process","env","CLOUDINARY_URL","mediaUrl","url","handleSubmit","preventDefault","payload","orderId","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { \n  Form,\n  Item, \n  Input, \n  TextArea,\n  Dropdown,\n  Button, \n  Image, \n  Message, \n  Header, \n  Icon\n } from 'semantic-ui-react';\n import axios from 'axios';\n import baseUrl from '../utils/baseUrl';\n import catchErrors from '../utils/catchErrors';\n import Router from 'next/router';\n\n\n const INITIAL_ORDER = {\n    user: \"\",\n    products: \"\",\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    notes: \"\",\n    orderStatus: \"\",\n    total: \"\",\n    media: \"\",\n };\n\n const statusOptions = [\n  {\n    key: \"Open\",\n    text: \"Open\",\n    value: \"Open\",\n  }, \n  {\n    key: \"Complete\",\n    text: \"Complete\",\n    value: \"Complete\",\n  },\n ];\n\n const eraSelection = \"50's\"\n\n\nfunction CreateOrder( _id, user ) {\n  const [record, setRecord] = React.useState(INITIAL_ORDER);\n  const [mediaPreview, setMediaPreview] = React.useState('');\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [disabled, setDisabled] = React.useState(true);\n  const [error, setError] = React.useState('');\n  const [status, setStatus] = React.useState(INITIAL_ORDER);\n\n\n\n  React.useEffect(() => {\n    const isOrder = Object.values(record).every(el => Boolean(el));\n    isOrder ? setDisabled(false) : setDisabled(true);\n  }, [record]);\n\n\nfunction handleChange(event) {\n  const { name, value, files } = event.target;\n  if (name === \"media\") {\n    setRecord(prevState => ({ ...prevState, media: files[0] }\n    ));\n    setMediaPreview(window.URL.createObjectURL(files[0]));\n  } else {\n    setRecord(prevState => ({ ...prevState, [name]: value }));\n  }\n}\n\nfunction handleSelect(event) {\n  const { name, value } = event.target;\n    setStatus(prevState => ({ ...prevState, [name]: value }));\n    console.log(INITIAL_ORDER.era);\n    handleChange;\n}\n\nasync function handleImageUpload() {\n  const data = new FormData()\n  data.append('file', record.media)\n  data.append('upload_preset', 'builders-log')\n  data.append('cloud_name', 'dtan19')\n  const response = await axios.post(process.env.CLOUDINARY_URL, data);\n  const mediaUrl = response.data.url;\n  return mediaUrl;\n}\n\nasync function handleSubmit(event) {\n  try {\n    event.preventDefault();\n    setLoading(true);\n    setError('');\n    const mediaUrl = await handleImageUpload();\n    const url = `${baseUrl}/api/order`\n    const { user, products, name, phone, email,notes, orderStatus, total  } = record;\n    const payload = { mediaUrl, user, products, name, phone, email,notes, orderStatus, total }\n    const response = await axios.post(url, payload);\n    //console.log({ response });\n    setRecord(INITIAL_ORDER);\n    setSuccess(true);\n    const orderId = response.data._id;\n    Router.push(`/order?_id=${orderId}`)\n  } catch(error) {\n    catchErrors(error, setError)\n  } finally {\n    setLoading(false);\n  }\n\n}\n\n  return (\n    <>\n      <Header as=\"h2\" block>\n        <Icon name='add' color=\"orange\" />\n        Create an Order\n      </Header>\n      <Form loading={loading} error={Boolean(error)} success={success} onSubmit={handleSubmit} >\n      <Message \n        error\n        header=\"Oops!\"\n        content={error}\n        />\n        <Message \n        success\n        icon=\"check\"\n        header=\"Success\"\n        content=\"Your order has been created\"\n        />\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            control={Input}\n            name=\"media\"\n            type=\"file\"\n            label=\"Media\"\n            //accept=\"image/*\"\n            content=\"Select Image\"\n            onChange={handleChange}\n            required\n          />\n        </Form.Group>\n        <Image src={mediaPreview} rounded centered size=\"small\"/>\n        <Form.Group>\n          <p>Create your own order:</p>\n        </Form.Group>\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            control={Input}\n            name=\"name\"\n            label=\"Name\"\n            placeholder=\"Jane Smith\"\n            value={record.name}\n            onChange={handleChange}\n            required\n          />\n          <Form.Field\n            control={Input}\n            name=\"phone\"\n            label=\"Phone\"\n            placeholder=\"801-555-1234\"\n            value={record.phone}\n            onChange={handleChange}\n            required\n          />\n        </Form.Group>\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            control={TextArea}\n            name=\"notes\"\n            label=\"Notes\"\n            placeholder=\"Type any special instructions here.\"\n            value={record.notes}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Dropdown\n            selection\n            name=\"orderStatus\"\n            label=\"Status\"\n            placeholder=\"Open\"\n            options={statusOptions}\n            value={record.orderStatus}\n            onChange={handleSelect}\n          />\n          <Form.Field\n            control={Input}\n            name=\"total\"\n            label=\"Total\"\n            placeholder=\"3.99\"\n            value={record.total}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Field\n          control={Button}\n          //disabled={disabled || loading}\n          color=\"blue\"\n          content=\"Create\"\n          type=\"Submit\"\n        />\n      </Form>\n    </>\n  )\n}\n\nexport default CreateOrder;\n\n\n"]},"metadata":{},"sourceType":"module"}
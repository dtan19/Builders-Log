{"ast":null,"code":"var _jsxFileName = \"/Users/david/Dev/myapps/Builders-Log/components/Account/AccountPermissions.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport { Header, Checkbox, Table, Icon } from 'semantic-ui-react';\nimport cookie from 'js-cookie';\nimport baseUrl from '../../utils/baseUrl';\n\nfunction AccountPermissions() {\n  const [users, setUsers] = React.useState([]);\n  React.useEffect(() => {\n    getUsers();\n  }, []);\n\n  async function getUsers() {\n    const url = `${baseUrl}/api/users`;\n    const token = cookie.get(\"token\");\n    const payload = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const response = await axios.get(url, payload);\n    setUsers(response.data);\n  }\n\n  return __jsx(\"div\", {\n    style: {\n      margin: '2em 0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), \"User Permissions\"), __jsx(Table, {\n    compact: true,\n    celled: true,\n    definition: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), __jsx(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Name\"), __jsx(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Email\"), __jsx(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Joined\"), __jsx(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Updated\"), __jsx(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Role\"))), __jsx(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, users.map(user => __jsx(UserPermission, {\n    key: user._id,\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })))));\n}\n\nfunction UserPermission({\n  user\n}) {\n  const [admin, setAdmin] = React.useState(user.role === 'admin');\n  const isFirstRun = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    console.log(\"role updated\", admin);\n  }, [admin]);\n\n  function handleChangePermission() {\n    setAdmin(prevState => !prevState);\n  }\n\n  return __jsx(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(Table.Cell, {\n    collapsing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    checked: admin,\n    toggle: true,\n    onChange: handleChangePermission,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), __jsx(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, user.name), __jsx(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, user.email), __jsx(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, user.createdAt), __jsx(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, user.updatedAt), __jsx(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, admin ? \"admin\" : \"user\"));\n}\n\nexport default AccountPermissions;","map":{"version":3,"sources":["/Users/david/Dev/myapps/Builders-Log/components/Account/AccountPermissions.js"],"names":["React","axios","Header","Checkbox","Table","Icon","cookie","baseUrl","AccountPermissions","users","setUsers","useState","useEffect","getUsers","url","token","get","payload","headers","Authorization","response","data","margin","map","user","_id","UserPermission","admin","setAdmin","role","isFirstRun","useRef","current","console","log","handleChangePermission","prevState","name","email","createdAt","updatedAt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Header, Checkbox, Table, Icon } from 'semantic-ui-react';\nimport cookie from 'js-cookie';\nimport baseUrl from '../../utils/baseUrl';\n\n\nfunction AccountPermissions() {\n  const [users, setUsers] = React.useState([])\n\n  React.useEffect(() => {\n    getUsers();\n  }, []);\n\n  async function getUsers() {\n    const url = `${baseUrl}/api/users`;\n    const token = cookie.get(\"token\");\n    const payload = { headers: { Authorization: token }};\n    const response = await axios.get(url, payload);\n    setUsers(response.data);\n  }\n\n  return (\n    <div style={{ margin: '2em 0'}}>\n      <Header as=\"h2\">\n        <Icon name=\"settings\"/>\n        User Permissions\n      </Header>\n      <Table compact celled definition>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell/>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Email</Table.HeaderCell>\n            <Table.HeaderCell>Joined</Table.HeaderCell>\n            <Table.HeaderCell>Updated</Table.HeaderCell>\n            <Table.HeaderCell>Role</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {users.map(user => (\n            <UserPermission key={user._id} user={user} />\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n}\n\nfunction UserPermission({ user }) {\n   const [admin, setAdmin] = React.useState(user.role === 'admin')\n  const isFirstRun = React.useRef(true)\n\n  React.useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    console.log(\"role updated\", admin);\n  }, [admin])\n\n  function handleChangePermission() {\n    setAdmin(prevState => !prevState)\n  }\n\n  return (\n    <Table.Row>\n      <Table.Cell collapsing>\n        <Checkbox checked={admin} toggle onChange={handleChangePermission}/>\n      </Table.Cell>\n      <Table.Cell>{user.name}</Table.Cell>\n      <Table.Cell>{user.email}</Table.Cell>\n      <Table.Cell>{user.createdAt}</Table.Cell>\n      <Table.Cell>{user.updatedAt}</Table.Cell>\n      <Table.Cell>{admin ? \"admin\" : \"user\"}</Table.Cell>\n    </Table.Row>\n  )\n}\n\nexport default AccountPermissions;\n"]},"metadata":{},"sourceType":"module"}
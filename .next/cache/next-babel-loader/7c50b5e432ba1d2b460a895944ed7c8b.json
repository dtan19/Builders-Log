{"ast":null,"code":"var _jsxFileName = \"/Users/david/Dev/myapps/Builders-Log/pages/createlog.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Form, Input, Dropdown, TextArea, Button, Image, Message, Header, Icon } from 'semantic-ui-react';\nimport axios from 'axios';\nimport baseUrl from '../utils/baseUrl';\nimport catchErrors from '../utils/catchErrors';\nconst INITIAL_LOG = {\n  media: \"\",\n  date: \"\",\n  hours: \"\",\n  logType: \"\",\n  description: \"\",\n  notes: \"\"\n};\nconst logTypeOptions = [{\n  key: 'Assembly',\n  text: 'Assembly',\n  value: 'Assembly'\n}, {\n  key: 'Research',\n  text: 'Research',\n  value: 'Research'\n}, {\n  key: 'Design',\n  text: 'Design',\n  value: 'Design'\n}, {\n  key: 'Purchase',\n  text: 'Purchase',\n  value: 'Purchase'\n}, {\n  key: 'Testing',\n  text: 'Testing',\n  value: 'Testing'\n}];\n\nfunction CreateLog() {\n  const [log, setLog] = React.useState(INITIAL_LOG);\n  const [mediaPreview, setMediaPreview] = React.useState('');\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [disabled, setDisabled] = React.useState(true);\n  const [error, setError] = React.useState(''); //const [logType, setLogType] = React.useState(true);\n\n  React.useEffect(() => {\n    const isLog = Object.values(log).every(el => Boolean(el));\n    isLog ? setDisabled(false) : setDisabled(true);\n  }, [log]);\n\n  function handleChange(event) {\n    const {\n      name,\n      value,\n      files\n    } = event.target;\n\n    if (name === \"media\") {\n      setLog(prevState => _objectSpread({}, prevState, {\n        media: files[0]\n      }));\n      setMediaPreview(window.URL.createObjectURL(files[0]));\n    } else {\n      setLog(prevState => _objectSpread({}, prevState, {\n        [name]: value\n      }));\n    }\n  }\n\n  async function handleImageUpload() {\n    const data = new FormData();\n    data.append('file', log.media);\n    data.append('upload_preset', 'builders-log');\n    data.append('cloud_name', 'dtan19');\n    const response = await axios.post(process.env.CLOUDINARY_URL, data);\n    const mediaUrl = response.data.url; //console.log(mediaUrl);\n\n    return mediaUrl;\n  }\n\n  async function handleSubmit(event) {\n    try {\n      event.preventDefault();\n      setLoading(true);\n      setError('');\n      const mediaUrl = await handleImageUpload();\n      const url = `${baseUrl}/api/log`;\n      const {\n        date,\n        hours,\n        logType,\n        description,\n        notes\n      } = log;\n      const payload = {\n        mediaUrl,\n        date,\n        hours,\n        logType,\n        description,\n        notes\n      };\n      const response = await axios.post(url, payload); //console.log({ response });\n\n      setLog(INITIAL_LOG);\n      setSuccess(true);\n    } catch (error) {\n      catchErrors(error, setError);\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  /*function handleLogType() {\n    if (INITIAL_LOG.type === \"Purchase\") {\n      setLogType(true);\n    } else {\n      console.log('Here is a message');\n    }\n  }*/\n\n  /*<Form.Field\n  control={Dropdown}\n  name=\"type\"\n  label=\"Log Type\"\n  type=\"text\"\n  placeholder=\"Log Type\"\n  options={logTypeOptions}\n  onChange={handleChange}\n  />*/\n\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    as: \"h2\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"wrench\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), \"Create New Log\"), __jsx(Form, {\n    loading: loading,\n    error: Boolean(error),\n    success: success,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), __jsx(Message, {\n    success: true,\n    icon: \"check\",\n    header: \"Success\",\n    content: \"Your log has been posted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), __jsx(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, __jsx(Form.Field, {\n    control: Input,\n    name: \"media\",\n    type: \"file\",\n    label: \"Image\",\n    accept: \"image/*\",\n    content: \"Select Image\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })), __jsx(Image, {\n    src: mediaPreview,\n    rounded: true,\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), __jsx(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(Form.Field, {\n    control: Input,\n    name: \"date\",\n    label: \"Date\",\n    type: \"date\",\n    placeholder: \"Date\",\n    value: log.date,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), __jsx(Form.Field, {\n    control: Input,\n    name: \"hours\",\n    label: \"Hours\",\n    placeholder: \"0.00\",\n    min: \"0.25\",\n    step: \"0.25\",\n    type: \"number\",\n    value: log.hours,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), __jsx(Dropdown, {\n    selection: true,\n    name: \"type\",\n    label: \"Log Type\",\n    placeholder: \"Log Type\",\n    options: logTypeOptions,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  })), __jsx(Form.Field, {\n    control: TextArea,\n    name: \"description\",\n    label: \"Description\",\n    placeholder: \"Description\",\n    value: log.description,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), __jsx(Form.Field, {\n    control: TextArea,\n    name: \"notes\",\n    label: \"Notes\",\n    placeholder: \"Notes\",\n    value: log.notes,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), __jsx(Form.Field, {\n    control: Button,\n    disabled: disabled || loading,\n    color: \"blue\",\n    icon: \"pencil alternate\",\n    content: \"Submit\",\n    type: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  })));\n}\n\nexport default CreateLog;","map":{"version":3,"sources":["/Users/david/Dev/myapps/Builders-Log/pages/createlog.js"],"names":["React","Form","Input","Dropdown","TextArea","Button","Image","Message","Header","Icon","axios","baseUrl","catchErrors","INITIAL_LOG","media","date","hours","logType","description","notes","logTypeOptions","key","text","value","CreateLog","log","setLog","useState","mediaPreview","setMediaPreview","success","setSuccess","loading","setLoading","disabled","setDisabled","error","setError","useEffect","isLog","Object","values","every","el","Boolean","handleChange","event","name","files","target","prevState","window","URL","createObjectURL","handleImageUpload","data","FormData","append","response","post","process","env","CLOUDINARY_URL","mediaUrl","url","handleSubmit","preventDefault","payload","console"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { \n  Form, \n  Input, \n  Dropdown,\n  TextArea, \n  Button, \n  Image, \n  Message, \n  Header, \n  Icon\n } from 'semantic-ui-react';\n import axios from 'axios';\n import baseUrl from '../utils/baseUrl';\n import catchErrors from '../utils/catchErrors';\n\n const INITIAL_LOG = {\n    media: \"\",  \n    date: \"\",\n    hours: \"\",\n    logType: \"\",\n    description: \"\",\n    notes: \"\",\n };\n\n const logTypeOptions = [\n  {\n    key: 'Assembly',\n    text: 'Assembly',\n    value: 'Assembly',\n  }, \n  {\n    key: 'Research',\n    text: 'Research',\n    value: 'Research',\n  },\n  {\n    key: 'Design',\n    text: 'Design',\n    value: 'Design',\n  },\n  {\n    key: 'Purchase',\n    text: 'Purchase',\n    value: 'Purchase',\n  },\n  {\n    key: 'Testing',\n    text: 'Testing',\n    value: 'Testing',\n  },\n ]\n\n\nfunction CreateLog() {\n  const [log, setLog] = React.useState(INITIAL_LOG);\n  const [mediaPreview, setMediaPreview] = React.useState('');\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [disabled, setDisabled] = React.useState(true);\n  const [error, setError] = React.useState('');\n  //const [logType, setLogType] = React.useState(true);\n\n  React.useEffect(() => {\n    const isLog = Object.values(log).every(el => Boolean(el))\n    isLog ? setDisabled(false) : setDisabled(true);\n  }, [log]);\n\n\nfunction handleChange(event) {\n  const { name, value, files } = event.target;\n  if (name === \"media\") {\n    setLog(prevState => ({ ...prevState, media: files[0] }\n    ));\n    setMediaPreview(window.URL.createObjectURL(files[0]));\n  } else {\n    setLog(prevState => ({ ...prevState, [name]: value }));\n  }\n}\n\nasync function handleImageUpload() {\n  const data = new FormData()\n  data.append('file', log.media)\n  data.append('upload_preset', 'builders-log')\n  data.append('cloud_name', 'dtan19')\n  const response = await axios.post(process.env.CLOUDINARY_URL, data);\n  const mediaUrl = response.data.url;\n  //console.log(mediaUrl);\n  return mediaUrl;\n}\n\nasync function handleSubmit(event) {\n  try {\n    event.preventDefault();\n    setLoading(true);\n    setError('');\n    const mediaUrl = await handleImageUpload();\n    const url = `${baseUrl}/api/log`\n    const { date, hours, logType, description, notes } = log;\n    const payload = { mediaUrl, date, hours, logType, description, notes }\n    const response = await axios.post(url, payload);\n    //console.log({ response });\n    setLog(INITIAL_LOG);\n    setSuccess(true);\n  } catch(error) {\n    catchErrors(error, setError);\n    console.log(error);\n  } finally {\n    setLoading(false);\n  }\n\n}\n\n/*function handleLogType() {\n  if (INITIAL_LOG.type === \"Purchase\") {\n    setLogType(true);\n  } else {\n    console.log('Here is a message');\n  }\n}*/\n\n/*<Form.Field\ncontrol={Dropdown}\nname=\"type\"\nlabel=\"Log Type\"\ntype=\"text\"\nplaceholder=\"Log Type\"\noptions={logTypeOptions}\nonChange={handleChange}\n/>*/\n\n\n  return (\n    <>\n      <Header as=\"h2\" block>\n        <Icon name='wrench' color=\"blue\" />\n        Create New Log\n      </Header>\n      <Form loading={loading} error={Boolean(error)} success={success} onSubmit={handleSubmit} >\n      <Message \n        error\n        header=\"Oops!\"\n        content={error}\n        />\n        <Message \n        success\n        icon=\"check\"\n        header=\"Success\"\n        content=\"Your log has been posted\"\n        />\n        <Form.Group widths=\"equal\">\n        <Form.Field\n            control={Input}\n            name=\"media\"\n            type=\"file\"\n            label=\"Image\"\n            accept=\"image/*\"\n            content=\"Select Image\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Image src={mediaPreview} rounded centered \n        />\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            control={Input}\n            name=\"date\"\n            label=\"Date\"\n            type=\"date\"\n            placeholder=\"Date\"\n            value={log.date}\n            onChange={handleChange}\n          />\n          <Form.Field\n            control={Input}\n            name=\"hours\"\n            label=\"Hours\"\n            placeholder=\"0.00\"\n            min=\"0.25\"\n            step=\"0.25\"\n            type=\"number\"\n            value={log.hours}\n            onChange={handleChange}\n          />\n          <Dropdown\n            selection\n            name=\"type\"\n            label=\"Log Type\"\n            placeholder=\"Log Type\"\n            options={logTypeOptions}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Field\n          control={TextArea}\n          name=\"description\"\n          label=\"Description\"\n          placeholder=\"Description\"\n          value={log.description}\n          onChange={handleChange}\n        />\n        <Form.Field\n          control={TextArea}\n          name=\"notes\"\n          label=\"Notes\"\n          placeholder=\"Notes\"\n          value={log.notes}\n          onChange={handleChange}\n        />\n        <Form.Field\n          control={Button}\n          disabled={disabled || loading}\n          color=\"blue\"\n          icon=\"pencil alternate\"\n          content=\"Submit\"\n          type=\"Submit\"\n        />\n      </Form>\n    </>\n  )\n}\n\nexport default CreateLog;\n"]},"metadata":{},"sourceType":"module"}
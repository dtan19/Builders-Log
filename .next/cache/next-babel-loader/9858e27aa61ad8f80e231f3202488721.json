{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport { Header, Checkbox, Table, Icon } from 'semantic-ui-react';\nimport cookie from 'js-cookie';\nimport baseUrl from '../../utils/baseUrl';\nimport formatDate from '../../utils/formatDate';\n\nfunction AccountPermissions() {\n  const [users, setUsers] = React.useState([]);\n  React.useEffect(() => {\n    getUsers();\n  }, []);\n\n  async function getUsers() {\n    const url = `${baseUrl}/api/users`;\n    const token = cookie.get(\"token\");\n    const payload = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const response = await axios.get(url, payload);\n    setUsers(response.data);\n  }\n\n  return __jsx(\"div\", {\n    style: {\n      margin: '2em 0'\n    }\n  }, __jsx(Header, {\n    as: \"h2\"\n  }, __jsx(Icon, {\n    name: \"settings\"\n  }), \"User Permissions\"), __jsx(Table, {\n    compact: true,\n    celled: true,\n    definition: true\n  }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null), __jsx(Table.HeaderCell, null, \"Name\"), __jsx(Table.HeaderCell, null, \"Email\"), __jsx(Table.HeaderCell, null, \"Joined\"), __jsx(Table.HeaderCell, null, \"Updated\"), __jsx(Table.HeaderCell, null, \"Role\"))), __jsx(Table.Body, null, users.map(user => __jsx(UserPermission, {\n    key: user._id,\n    user: user\n  })))));\n}\n\nfunction UserPermission({\n  user\n}) {\n  const [admin, setAdmin] = React.useState(user.role === 'admin');\n  const isFirstRun = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    updatePermission();\n  }, [admin]);\n\n  function handleChangePermission() {\n    setAdmin(prevState => !prevState);\n  }\n\n  async function updatePermission() {\n    const url = `${baseUrl}/api/account`;\n    const payload = {\n      _id: user._id,\n      role: admin ? \"admin\" : \"user\"\n    };\n    const response = await axios.put(url, payload);\n  }\n\n  return __jsx(Table.Row, null, __jsx(Table.Cell, {\n    collapsing: true\n  }, __jsx(Checkbox, {\n    checked: admin,\n    toggle: true,\n    onChange: handleChangePermission\n  })), __jsx(Table.Cell, null, user.name), __jsx(Table.Cell, null, user.email), __jsx(Table.Cell, null, formatDate(user.createdAt)), __jsx(Table.Cell, null, formatDate(user.updatedAt)), __jsx(Table.Cell, null, admin ? \"admin\" : \"user\"));\n}\n\nexport default AccountPermissions;","map":null,"metadata":{},"sourceType":"module"}
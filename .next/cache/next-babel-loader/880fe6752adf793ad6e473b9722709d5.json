{"ast":null,"code":"var _jsxFileName = \"/Users/david/Dev/myapps/Builders-Log/components/Cart/CartSummary.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Button, Segment, Divider } from 'semantic-ui-react';\nimport calculateCartTotal from '../../utils/calculateCartTotal';\n\nfunction CartSummary({\n  products,\n  handleCheckout\n}) {\n  const [cartAmount, setCartAmount] = React.useState(0);\n  const [stripeAmount, setStripeAmount] = React.useState(0);\n  const [isCartEmpty, setCartEmpty] = React.useState(false);\n  React.useEffect(() => {\n    const {\n      cartTotal,\n      stripeTotal\n    } = calculateCartTotal(products);\n    setCartAmount(cartTotal);\n    setStripeAmount(stripeTotal);\n    setCartEmpty(products.length === 0);\n  }, [products]);\n  return __jsx(React.Fragment, null, __jsx(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), __jsx(Segment, {\n    clearing: true,\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Subtotal:\"), \" $\", cartAmount, __jsx(StripeCheckout, {\n    name: \"Builder's Log\",\n    amount: stripeAmount,\n    image: products.length > 0 ? products[0].product.mediaUrl : \"\",\n    currency: \"usd\",\n    shippingAddress: true,\n    billingAddress: true,\n    zipCose: true,\n    token: handleCheckout,\n    triggerEvent: \"onClick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(Button, {\n    icon: \"cart\",\n    disabled: isCartEmpty,\n    color: \"teal\",\n    floated: \"right\",\n    content: \"Checkout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))));\n}\n\nexport default CartSummary;","map":{"version":3,"sources":["/Users/david/Dev/myapps/Builders-Log/components/Cart/CartSummary.js"],"names":["React","StripeCheckout","Button","Segment","Divider","calculateCartTotal","CartSummary","products","handleCheckout","cartAmount","setCartAmount","useState","stripeAmount","setStripeAmount","isCartEmpty","setCartEmpty","useEffect","cartTotal","stripeTotal","length","product","mediaUrl"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,OAA1B,QAAyC,mBAAzC;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAArB,EAAmD;AACjD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,KAAK,CAACW,QAAN,CAAe,CAAf,CAApC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,KAAK,CAACW,QAAN,CAAe,CAAf,CAAxC;AACA,QAAM,CAACG,WAAD,EAAcC,YAAd,IAA8Bf,KAAK,CAACW,QAAN,CAAe,KAAf,CAApC;AAEAX,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpB,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA6Bb,kBAAkB,CAACE,QAAD,CAArD;AACAG,IAAAA,aAAa,CAACO,SAAD,CAAb;AACAJ,IAAAA,eAAe,CAACK,WAAD,CAAf;AACAH,IAAAA,YAAY,CAACR,QAAQ,CAACY,MAAT,KAAoB,CAArB,CAAZ;AACD,GALD,EAKG,CAACZ,QAAD,CALH;AAOA,SAAO,4BACL,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAEL,MAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,QAC+BE,UAD/B,EAEE,MAAC,cAAD;AACA,IAAA,IAAI,EAAC,eADL;AAEA,IAAA,MAAM,EAAEG,YAFR;AAGA,IAAA,KAAK,EAAEL,QAAQ,CAACY,MAAT,GAAkB,CAAlB,GAAsBZ,QAAQ,CAAC,CAAD,CAAR,CAAYa,OAAZ,CAAoBC,QAA1C,GAAqD,EAH5D;AAIA,IAAA,QAAQ,EAAC,KAJT;AAKA,IAAA,eAAe,EAAE,IALjB;AAMA,IAAA,cAAc,EAAE,IANhB;AAOA,IAAA,OAAO,EAAE,IAPT;AAQA,IAAA,KAAK,EAAEb,cARP;AASA,IAAA,YAAY,EAAC,SATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAEM,WAFZ;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,OAAO,EAAC,OAJV;AAKE,IAAA,OAAO,EAAC,UALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAFF,CAFK,CAAP;AAyBD;;AAED,eAAeR,WAAf","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Button, Segment, Divider } from 'semantic-ui-react';\nimport calculateCartTotal from '../../utils/calculateCartTotal';\n\nfunction CartSummary({ products, handleCheckout }) {\n  const [cartAmount, setCartAmount] = React.useState(0);\n  const [stripeAmount, setStripeAmount] = React.useState(0);\n  const [isCartEmpty, setCartEmpty] = React.useState(false);\n\n  React.useEffect(() => {\n    const { cartTotal, stripeTotal } = calculateCartTotal(products);\n    setCartAmount(cartTotal);\n    setStripeAmount(stripeTotal);\n    setCartEmpty(products.length === 0);\n  }, [products])\n\n  return <>\n    <Divider />\n    <Segment clearing size=\"large\">\n      <strong>Subtotal:</strong> ${cartAmount}\n      <StripeCheckout\n      name=\"Builder's Log\"\n      amount={stripeAmount}\n      image={products.length > 0 ? products[0].product.mediaUrl : \"\"}\n      currency=\"usd\"\n      shippingAddress={true}\n      billingAddress={true}\n      zipCose={true}\n      token={handleCheckout}\n      triggerEvent=\"onClick\"\n      >\n        <Button \n          icon=\"cart\"\n          disabled={isCartEmpty}\n          color=\"teal\"\n          floated=\"right\"\n          content=\"Checkout\"\n        />\n      </StripeCheckout>\n    </Segment>\n  </>;\n}\n\nexport default CartSummary;\n"]},"metadata":{},"sourceType":"module"}
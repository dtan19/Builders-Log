{"ast":null,"code":"var _jsxFileName = \"/Users/david/Dev/myapps/Builders-Log/pages/createlog.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Form, Input, Dropdown, TextArea, Button, Image, Message, Header, Icon } from 'semantic-ui-react';\nimport axios from 'axios';\nimport baseUrl from '../utils/baseUrl';\nimport catchErrors from '../utils/catchErrors';\nimport Router from 'next/router';\nconst INITIAL_LOG = {\n  media: \"\",\n  date: \"\",\n  hours: \"\",\n  amount: \"\",\n  logType: \"\",\n  description: \"\",\n  notes: \"\"\n};\nconst logTypeOptions = [{\n  key: 'Assembly',\n  text: 'Assembly',\n  value: 'Assembly'\n}, {\n  key: 'Research',\n  text: 'Research',\n  value: 'Research'\n}, {\n  key: 'Design',\n  text: 'Design',\n  value: 'Design'\n}, {\n  key: 'Purchase',\n  text: 'Purchase',\n  value: 'Purchase'\n}, {\n  key: 'Testing',\n  text: 'Testing',\n  value: 'Testing'\n}];\n\nfunction CreateLog() {\n  const [log, setLog] = React.useState(INITIAL_LOG);\n  const [mediaPreview, setMediaPreview] = React.useState('');\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [disabled, setDisabled] = React.useState(true);\n  const [error, setError] = React.useState('');\n  const [logType, setLogType] = React.useState(INITIAL_LOG.logType);\n  const [amount, setAmount] = React.useState(false);\n  React.useEffect(() => {\n    const isLog = Object.values(log).every(el => Boolean(el));\n    isLog ? setDisabled(false) : setDisabled(true);\n  }, [log]);\n\n  function handleChange(event) {\n    const {\n      name,\n      value,\n      files\n    } = event.target;\n\n    if (name === \"media\") {\n      setLog(prevState => _objectSpread({}, prevState, {\n        media: files[0]\n      }));\n      setMediaPreview(window.URL.createObjectURL(files[0]));\n    } else {\n      setLog(prevState => _objectSpread({}, prevState, {\n        [name]: value\n      }));\n    }\n  }\n\n  function handleLogType(option) {\n    const {\n      name\n    } = event.target;\n\n    if (name === \"logType\") {\n      setState({\n        logType: option\n      });\n      console.log(INITIAL_LOG.logType);\n    } else {\n      console.log(INITIAL_LOG.logType);\n      handleType;\n    }\n  }\n\n  function handleType(option) {\n    const {\n      selection\n    } = event.target.option;\n\n    if (selection === \"Purchase\") {\n      handleChange;\n\n      if (logType === \"Purchase\") {\n        setAmount(true);\n      }\n    } else {}\n  }\n\n  async function handleImageUpload() {\n    const data = new FormData();\n    data.append('file', log.media);\n    data.append('upload_preset', 'builders-log');\n    data.append('cloud_name', 'dtan19');\n    const response = await axios.post(process.env.CLOUDINARY_URL, data);\n    const mediaUrl = response.data.url; //console.log(mediaUrl);\n\n    return mediaUrl;\n  }\n\n  async function handleSubmit(event) {\n    try {\n      event.preventDefault();\n      setLoading(true);\n      setError('');\n      const mediaUrl = await handleImageUpload();\n      const url = `${baseUrl}/api/log`;\n      const {\n        date,\n        hours,\n        amount,\n        logType,\n        description,\n        notes\n      } = log;\n      const payload = {\n        mediaUrl,\n        date,\n        hours,\n        amount,\n        logType,\n        description,\n        notes\n      };\n      const response = await axios.post(url, payload); //console.log({ response });\n\n      setLog(INITIAL_LOG);\n      setSuccess(true);\n      const logId = response.data._id;\n      Router.push(`/log?_id=${logId}`);\n    } catch (error) {\n      catchErrors(error, setError);\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    as: \"h2\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"wrench\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), \"Create New Log\"), __jsx(Form, {\n    loading: loading,\n    error: Boolean(error),\n    success: success,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), __jsx(Message, {\n    success: true,\n    icon: \"check\",\n    header: \"Success\",\n    content: \"Your log has been posted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), __jsx(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(Form.Field, {\n    control: Input,\n    name: \"media\",\n    type: \"file\",\n    label: \"Image\",\n    accept: \"image/*\",\n    content: \"Select Image\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  })), __jsx(Image, {\n    src: mediaPreview,\n    rounded: true,\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), __jsx(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, __jsx(Form.Dropdown, {\n    selection: true,\n    name: \"logType\",\n    label: \"Log Type\",\n    placeholder: \"Pick Something\",\n    value: INITIAL_LOG.logType,\n    options: logTypeOptions,\n    onChange: handleLogType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), __jsx(Form.Field, {\n    control: Input,\n    name: \"date\",\n    label: \"Date\",\n    type: \"date\",\n    placeholder: \"Date\",\n    value: log.date,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }), amount ? __jsx(Form.Field, {\n    control: Input,\n    name: \"amount\",\n    label: \"Amount\",\n    placeholder: \"0.00\",\n    min: \"0.00\",\n    type: \"number\",\n    value: log.amount,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }) : __jsx(Form.Field, {\n    control: Input,\n    name: \"hours\",\n    label: \"Hours\",\n    placeholder: \"0.00\",\n    min: \"0.25\",\n    step: \"0.25\",\n    type: \"number\",\n    value: log.hours,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  })), __jsx(Form.Field, {\n    control: TextArea,\n    name: \"description\",\n    label: \"Description\",\n    placeholder: \"Description\",\n    value: log.description,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }), __jsx(Form.Field, {\n    control: TextArea,\n    name: \"notes\",\n    label: \"Notes\",\n    placeholder: \"Notes\",\n    value: log.notes,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }), __jsx(Form.Field, {\n    control: Button //disabled={disabled || loading}\n    ,\n    color: \"blue\",\n    icon: \"pencil alternate\",\n    content: \"Submit\",\n    type: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  })));\n}\n\nexport default CreateLog;","map":{"version":3,"sources":["/Users/david/Dev/myapps/Builders-Log/pages/createlog.js"],"names":["React","Form","Input","Dropdown","TextArea","Button","Image","Message","Header","Icon","axios","baseUrl","catchErrors","Router","INITIAL_LOG","media","date","hours","amount","logType","description","notes","logTypeOptions","key","text","value","CreateLog","log","setLog","useState","mediaPreview","setMediaPreview","success","setSuccess","loading","setLoading","disabled","setDisabled","error","setError","setLogType","setAmount","useEffect","isLog","Object","values","every","el","Boolean","handleChange","event","name","files","target","prevState","window","URL","createObjectURL","handleLogType","option","setState","console","handleType","selection","handleImageUpload","data","FormData","append","response","post","process","env","CLOUDINARY_URL","mediaUrl","url","handleSubmit","preventDefault","payload","logId","_id","push"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,KAFF,EAGEC,QAHF,EAIEC,QAJF,EAKEC,MALF,EAMEC,KANF,EAOEC,OAPF,EAQEC,MARF,EASEC,IATF,QAUQ,mBAVR;AAWC,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,MAAMC,WAAW,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,MAAM,EAAE,EAJS;AAKjBC,EAAAA,OAAO,EAAE,EALQ;AAMjBC,EAAAA,WAAW,EAAE,EANI;AAOjBC,EAAAA,KAAK,EAAE;AAPU,CAApB;AAUA,MAAMC,cAAc,GAAG,CACtB;AACEC,EAAAA,GAAG,EAAE,UADP;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CADsB,EAMtB;AACEF,EAAAA,GAAG,EAAE,UADP;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CANsB,EAWtB;AACEF,EAAAA,GAAG,EAAE,QADP;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CAXsB,EAgBtB;AACEF,EAAAA,GAAG,EAAE,UADP;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CAhBsB,EAqBtB;AACEF,EAAAA,GAAG,EAAE,SADP;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CArBsB,CAAvB;;AA6BD,SAASC,SAAT,GAAqB;AACnB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgB5B,KAAK,CAAC6B,QAAN,CAAef,WAAf,CAAtB;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkC/B,KAAK,CAAC6B,QAAN,CAAe,EAAf,CAAxC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBjC,KAAK,CAAC6B,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBnC,KAAK,CAAC6B,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BrC,KAAK,CAAC6B,QAAN,CAAe,IAAf,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBvC,KAAK,CAAC6B,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACV,OAAD,EAAUqB,UAAV,IAAwBxC,KAAK,CAAC6B,QAAN,CAAef,WAAW,CAACK,OAA3B,CAA9B;AACA,QAAM,CAACD,MAAD,EAASuB,SAAT,IAAsBzC,KAAK,CAAC6B,QAAN,CAAe,KAAf,CAA5B;AAEA7B,EAAAA,KAAK,CAAC0C,SAAN,CAAgB,MAAM;AACpB,UAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAclB,GAAd,EAAmBmB,KAAnB,CAAyBC,EAAE,IAAIC,OAAO,CAACD,EAAD,CAAtC,CAAd;AACAJ,IAAAA,KAAK,GAAGN,WAAW,CAAC,KAAD,CAAd,GAAwBA,WAAW,CAAC,IAAD,CAAxC;AACD,GAHD,EAGG,CAACV,GAAD,CAHH;;AAMF,WAASsB,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,UAAM;AAAEC,MAAAA,IAAF;AAAQ1B,MAAAA,KAAR;AAAe2B,MAAAA;AAAf,QAAyBF,KAAK,CAACG,MAArC;;AACA,QAAIF,IAAI,KAAK,OAAb,EAAsB;AACpBvB,MAAAA,MAAM,CAAC0B,SAAS,sBAAUA,SAAV;AAAqBvC,QAAAA,KAAK,EAAEqC,KAAK,CAAC,CAAD;AAAjC,QAAV,CAAN;AAEArB,MAAAA,eAAe,CAACwB,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BL,KAAK,CAAC,CAAD,CAAhC,CAAD,CAAf;AACD,KAJD,MAIO;AACLxB,MAAAA,MAAM,CAAC0B,SAAS,sBAAUA,SAAV;AAAqB,SAACH,IAAD,GAAQ1B;AAA7B,QAAV,CAAN;AACD;AACF;;AAED,WAASiC,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,UAAM;AAAER,MAAAA;AAAF,QAAWD,KAAK,CAACG,MAAvB;;AACA,QAAIF,IAAI,KAAK,SAAb,EAAwB;AACxBS,MAAAA,QAAQ,CAAC;AACPzC,QAAAA,OAAO,EAAEwC;AADF,OAAD,CAAR;AAGAE,MAAAA,OAAO,CAAClC,GAAR,CAAYb,WAAW,CAACK,OAAxB;AACD,KALC,MAKK;AACL0C,MAAAA,OAAO,CAAClC,GAAR,CAAYb,WAAW,CAACK,OAAxB;AACA2C,MAAAA,UAAU;AACX;AACA;;AAED,WAASA,UAAT,CAAoBH,MAApB,EAA4B;AAC1B,UAAM;AAAEI,MAAAA;AAAF,QAAgBb,KAAK,CAACG,MAAN,CAAaM,MAAnC;;AACA,QAAII,SAAS,KAAK,UAAlB,EAA8B;AAC5Bd,MAAAA,YAAY;;AACZ,UAAK9B,OAAO,KAAK,UAAjB,EAA6B;AAC3BsB,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,KALD,MAKO,CACN;AACF;;AAED,iBAAeuB,iBAAf,GAAmC;AACjC,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBxC,GAAG,CAACZ,KAAxB;AACAkD,IAAAA,IAAI,CAACE,MAAL,CAAY,eAAZ,EAA6B,cAA7B;AACAF,IAAAA,IAAI,CAACE,MAAL,CAAY,YAAZ,EAA0B,QAA1B;AACA,UAAMC,QAAQ,GAAG,MAAM1D,KAAK,CAAC2D,IAAN,CAAWC,OAAO,CAACC,GAAR,CAAYC,cAAvB,EAAuCP,IAAvC,CAAvB;AACA,UAAMQ,QAAQ,GAAGL,QAAQ,CAACH,IAAT,CAAcS,GAA/B,CANiC,CAOjC;;AACA,WAAOD,QAAP;AACD;;AAED,iBAAeE,YAAf,CAA4BzB,KAA5B,EAAmC;AACjC,QAAI;AACFA,MAAAA,KAAK,CAAC0B,cAAN;AACAzC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,YAAMkC,QAAQ,GAAG,MAAMT,iBAAiB,EAAxC;AACA,YAAMU,GAAG,GAAI,GAAE/D,OAAQ,UAAvB;AACA,YAAM;AAAEK,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA,MAAf;AAAuBC,QAAAA,OAAvB;AAAgCC,QAAAA,WAAhC;AAA6CC,QAAAA;AAA7C,UAAuDM,GAA7D;AACA,YAAMkD,OAAO,GAAG;AAAEJ,QAAAA,QAAF;AAAYzD,QAAAA,IAAZ;AAAkBC,QAAAA,KAAlB;AAAyBC,QAAAA,MAAzB;AAAiCC,QAAAA,OAAjC;AAA0CC,QAAAA,WAA1C;AAAuDC,QAAAA;AAAvD,OAAhB;AACA,YAAM+C,QAAQ,GAAG,MAAM1D,KAAK,CAAC2D,IAAN,CAAWK,GAAX,EAAgBG,OAAhB,CAAvB,CARE,CASF;;AACAjD,MAAAA,MAAM,CAACd,WAAD,CAAN;AACAmB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAM6C,KAAK,GAAGV,QAAQ,CAACH,IAAT,CAAcc,GAA5B;AACAlE,MAAAA,MAAM,CAACmE,IAAP,CAAa,YAAWF,KAAM,EAA9B;AACD,KAdD,CAcE,OAAMxC,KAAN,EAAa;AACb1B,MAAAA,WAAW,CAAC0B,KAAD,EAAQC,QAAR,CAAX;AACAsB,MAAAA,OAAO,CAAClC,GAAR,CAAYW,KAAZ;AACD,KAjBD,SAiBU;AACRH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AAEF;;AAEC,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,KAAK,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,mBADF,EAKE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAED,OAAf;AAAwB,IAAA,KAAK,EAAEc,OAAO,CAACV,KAAD,CAAtC;AAA+C,IAAA,OAAO,EAAEN,OAAxD;AAAiE,IAAA,QAAQ,EAAE2C,YAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,OAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,OAAO,EAAErC,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAME,MAAC,OAAD;AACA,IAAA,OAAO,MADP;AAEA,IAAA,IAAI,EAAC,OAFL;AAGA,IAAA,MAAM,EAAC,SAHP;AAIA,IAAA,OAAO,EAAC,0BAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAYE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD,CAAM,KAAN;AACI,IAAA,OAAO,EAAEpC,KADb;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,KAAK,EAAC,OAJV;AAKI,IAAA,MAAM,EAAC,SALX;AAMI,IAAA,OAAO,EAAC,cANZ;AAOI,IAAA,QAAQ,EAAE+C,YAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAZF,EAuBE,MAAC,KAAD;AAAO,IAAA,GAAG,EAAEnB,YAAZ;AAA0B,IAAA,OAAO,MAAjC;AAAkC,IAAA,QAAQ,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,EAyBE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,QAAN;AACE,IAAA,SAAS,MADX;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,WAAW,EAAC,gBAJd;AAKE,IAAA,KAAK,EAAEhB,WAAW,CAACK,OALrB;AAME,IAAA,OAAO,EAAEG,cANX;AAOE,IAAA,QAAQ,EAAEoC,aAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,MAAC,IAAD,CAAM,KAAN;AACE,IAAA,OAAO,EAAExD,KADX;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC,MALd;AAME,IAAA,KAAK,EAAEyB,GAAG,CAACX,IANb;AAOE,IAAA,QAAQ,EAAEiC,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAmBG/B,MAAM,GAAI,MAAC,IAAD,CAAM,KAAN;AACT,IAAA,OAAO,EAAEhB,KADA;AAET,IAAA,IAAI,EAAC,QAFI;AAGT,IAAA,KAAK,EAAC,QAHG;AAIT,IAAA,WAAW,EAAC,MAJH;AAKT,IAAA,GAAG,EAAC,MALK;AAMT,IAAA,IAAI,EAAC,QANI;AAOT,IAAA,KAAK,EAAEyB,GAAG,CAACT,MAPF;AAQT,IAAA,QAAQ,EAAE+B,YARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,GAUN,MAAC,IAAD,CAAM,KAAN;AACC,IAAA,OAAO,EAAE/C,KADV;AAEC,IAAA,IAAI,EAAC,OAFN;AAGC,IAAA,KAAK,EAAC,OAHP;AAIC,IAAA,WAAW,EAAC,MAJb;AAKC,IAAA,GAAG,EAAC,MALL;AAMC,IAAA,IAAI,EAAC,MANN;AAOC,IAAA,IAAI,EAAC,QAPN;AAQC,IAAA,KAAK,EAAEyB,GAAG,CAACV,KARZ;AASC,IAAA,QAAQ,EAAEgC,YATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BH,CAzBF,EAkEE,MAAC,IAAD,CAAM,KAAN;AACE,IAAA,OAAO,EAAE7C,QADX;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,KAAK,EAAC,aAHR;AAIE,IAAA,WAAW,EAAC,aAJd;AAKE,IAAA,KAAK,EAAEuB,GAAG,CAACP,WALb;AAME,IAAA,QAAQ,EAAE6B,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlEF,EA0EE,MAAC,IAAD,CAAM,KAAN;AACE,IAAA,OAAO,EAAE7C,QADX;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,WAAW,EAAC,OAJd;AAKE,IAAA,KAAK,EAAEuB,GAAG,CAACN,KALb;AAME,IAAA,QAAQ,EAAE4B,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1EF,EAkFE,MAAC,IAAD,CAAM,KAAN;AACE,IAAA,OAAO,EAAE5C,MADX,CAEE;AAFF;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,IAAI,EAAC,kBAJP;AAKE,IAAA,OAAO,EAAC,QALV;AAME,IAAA,IAAI,EAAC,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlFF,CALF,CADF;AAmGD;;AAED,eAAeqB,SAAf","sourcesContent":["import React from 'react';\nimport { \n  Form, \n  Input, \n  Dropdown,\n  TextArea, \n  Button, \n  Image, \n  Message, \n  Header, \n  Icon\n } from 'semantic-ui-react';\n import axios from 'axios';\n import baseUrl from '../utils/baseUrl';\n import catchErrors from '../utils/catchErrors';\n import Router from 'next/router';\n\n const INITIAL_LOG = {\n    media: \"\",  \n    date: \"\",\n    hours: \"\",\n    amount: \"\",\n    logType: \"\",\n    description: \"\",\n    notes: \"\",\n };\n\n const logTypeOptions = [\n  {\n    key: 'Assembly',\n    text: 'Assembly',\n    value: 'Assembly',\n  }, \n  {\n    key: 'Research',\n    text: 'Research',\n    value: 'Research',\n  },\n  {\n    key: 'Design',\n    text: 'Design',\n    value: 'Design',\n  },\n  {\n    key: 'Purchase',\n    text: 'Purchase',\n    value: 'Purchase',\n  },\n  {\n    key: 'Testing',\n    text: 'Testing',\n    value: 'Testing',\n  },\n ]\n\n\nfunction CreateLog() {\n  const [log, setLog] = React.useState(INITIAL_LOG);\n  const [mediaPreview, setMediaPreview] = React.useState('');\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [disabled, setDisabled] = React.useState(true);\n  const [error, setError] = React.useState('');\n  const [logType, setLogType] = React.useState(INITIAL_LOG.logType);\n  const [amount, setAmount] = React.useState(false);\n\n  React.useEffect(() => {\n    const isLog = Object.values(log).every(el => Boolean(el))\n    isLog ? setDisabled(false) : setDisabled(true);\n  }, [log]);\n\n\nfunction handleChange(event) {\n  const { name, value, files } = event.target;\n  if (name === \"media\") {\n    setLog(prevState => ({ ...prevState, media: files[0] }\n    ));\n    setMediaPreview(window.URL.createObjectURL(files[0]));\n  } else {\n    setLog(prevState => ({ ...prevState, [name]: value }));\n  }\n}\n\nfunction handleLogType(option) {\n  const { name } = event.target;\n  if (name === \"logType\") {\n  setState({\n    logType: option\n  });\n  console.log(INITIAL_LOG.logType)\n} else {\n  console.log(INITIAL_LOG.logType)\n  handleType;\n}\n}\n\nfunction handleType(option) {\n  const { selection } = event.target.option;\n  if (selection === \"Purchase\") {\n    handleChange;\n    if ( logType === \"Purchase\") {\n      setAmount(true);\n    }\n  } else {\n  }\n}\n\nasync function handleImageUpload() {\n  const data = new FormData()\n  data.append('file', log.media)\n  data.append('upload_preset', 'builders-log')\n  data.append('cloud_name', 'dtan19')\n  const response = await axios.post(process.env.CLOUDINARY_URL, data);\n  const mediaUrl = response.data.url;\n  //console.log(mediaUrl);\n  return mediaUrl;\n}\n\nasync function handleSubmit(event) {\n  try {\n    event.preventDefault();\n    setLoading(true);\n    setError('');\n    const mediaUrl = await handleImageUpload();\n    const url = `${baseUrl}/api/log`\n    const { date, hours, amount, logType, description, notes } = log;\n    const payload = { mediaUrl, date, hours, amount, logType, description, notes }\n    const response = await axios.post(url, payload);\n    //console.log({ response });\n    setLog(INITIAL_LOG);\n    setSuccess(true);\n    const logId = response.data._id;\n    Router.push(`/log?_id=${logId}`)\n  } catch(error) {\n    catchErrors(error, setError);\n    console.log(error);\n  } finally {\n    setLoading(false);\n  }\n\n}\n\n  return (\n    <>\n      <Header as=\"h2\" block>\n        <Icon name='wrench' color=\"blue\" />\n        Create New Log\n      </Header>\n      <Form loading={loading} error={Boolean(error)} success={success} onSubmit={handleSubmit} >\n      <Message \n        error\n        header=\"Oops!\"\n        content={error}\n        />\n        <Message \n        success\n        icon=\"check\"\n        header=\"Success\"\n        content=\"Your log has been posted\"\n        />\n        <Form.Group widths=\"equal\">\n        <Form.Field\n            control={Input}\n            name=\"media\"\n            type=\"file\"\n            label=\"Image\"\n            accept=\"image/*\"\n            content=\"Select Image\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Image src={mediaPreview} rounded centered \n        />\n        <Form.Group widths=\"equal\">\n          <Form.Dropdown\n            selection  \n            name=\"logType\"\n            label=\"Log Type\"\n            placeholder=\"Pick Something\"\n            value={INITIAL_LOG.logType}\n            options={logTypeOptions}\n            onChange={handleLogType}\n          />\n          <Form.Field\n            control={Input}\n            name=\"date\"\n            label=\"Date\"\n            type=\"date\"\n            placeholder=\"Date\"\n            value={log.date}\n            onChange={handleChange}\n          />\n          {amount ? (<Form.Field\n            control={Input}\n            name=\"amount\"\n            label=\"Amount\"\n            placeholder=\"0.00\"\n            min=\"0.00\"\n            type=\"number\"\n            value={log.amount}\n            onChange={handleChange}\n          />) :\n          (<Form.Field\n            control={Input}\n            name=\"hours\"\n            label=\"Hours\"\n            placeholder=\"0.00\"\n            min=\"0.25\"\n            step=\"0.25\"\n            type=\"number\"\n            value={log.hours}\n            onChange={handleChange}\n          />)}\n        </Form.Group>\n        <Form.Field\n          control={TextArea}\n          name=\"description\"\n          label=\"Description\"\n          placeholder=\"Description\"\n          value={log.description}\n          onChange={handleChange}\n        />\n        <Form.Field\n          control={TextArea}\n          name=\"notes\"\n          label=\"Notes\"\n          placeholder=\"Notes\"\n          value={log.notes}\n          onChange={handleChange}\n        />\n        <Form.Field\n          control={Button}\n          //disabled={disabled || loading}\n          color=\"blue\"\n          icon=\"pencil alternate\"\n          content=\"Submit\"\n          type=\"Submit\"\n        />\n      </Form>\n    </>\n  )\n}\n\nexport default CreateLog;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport baseUrl from '../../utils/baseUrl';\nimport cookie from 'jsonwebtoken';\n\nfunction AccountPermissions() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      users = _React$useState2[0],\n      setUsers = _React$useState2[1];\n\n  React.useEffect(function () {\n    getUsers();\n  }, []);\n\n  function getUsers() {\n    var url, token, payload;\n    return _regeneratorRuntime.async(function getUsers$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = \"\".concat(baseUrl, \"/api/users\");\n            token = cookie.get('token');\n            payload = {\n              headers: {\n                Authorization: token\n              }\n            };\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.get(url, payload));\n\n          case 5:\n            setUsers(response.data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, null, \"AccountPermissions\");\n}\n\nexport default AccountPermissions;","map":{"version":3,"sources":["/Users/david/Dev/myapps/Builders-Log/components/Account/AccountPermissions.js"],"names":["React","axios","baseUrl","cookie","AccountPermissions","useState","users","setUsers","useEffect","getUsers","url","token","get","payload","headers","Authorization","response","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,kBAAT,GAA8B;AAAA,wBACFJ,KAAK,CAACK,QAAN,CAAe,EAAf,CADE;AAAA;AAAA,MACrBC,KADqB;AAAA,MACdC,QADc;;AAG5BP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAM;AACpBC,IAAAA,QAAQ;AACT,GAFD,EAEG,EAFH;;AAIA,WAAeA,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,GADR,aACiBR,OADjB;AAEQS,YAAAA,KAFR,GAEgBR,MAAM,CAACS,GAAP,CAAW,OAAX,CAFhB;AAGQC,YAAAA,OAHR,GAGkB;AAAEC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,aAAa,EAAEJ;AAAjB;AAAX,aAHlB;AAAA;AAAA,6CAIQV,KAAK,CAACW,GAAN,CAAUF,GAAV,EAAeG,OAAf,CAJR;;AAAA;AAKEN,YAAAA,QAAQ,CAACS,QAAQ,CAACC,IAAV,CAAR;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,SAAO,iDAAP;AACD;;AAED,eAAeb,kBAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport baseUrl from '../../utils/baseUrl';\nimport cookie from 'jsonwebtoken';\n\nfunction AccountPermissions() {\n  const [users, setUsers] = React.useState([])\n\n  React.useEffect(() => {\n    getUsers()\n  }, [])\n\n  async function getUsers() {\n    const url = `${baseUrl}/api/users`\n    const token = cookie.get('token')\n    const payload = { headers: { Authorization: token }}\n    await axios.get(url, payload)\n    setUsers(response.data)\n  }\n\n  return <>AccountPermissions</>;\n}\n\nexport default AccountPermissions;\n"]},"metadata":{},"sourceType":"module"}
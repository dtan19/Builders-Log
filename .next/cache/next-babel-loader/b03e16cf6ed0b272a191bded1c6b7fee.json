{"ast":null,"code":"var _jsxFileName = \"/Users/david/Dev/myapps/Builders-Log/components/Account/AccountOrderStatus.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Header, Accordion, Label, Segment, Icon, Button, List, Image } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\nimport formatDate from '../../utils/formatDate';\n\nfunction statusColor() {\n  const {\n    status\n  } = \"open\";\n\n  if (status === \"open\") {\n    setStatus();\n    console.log('Order status is open');\n  } else {\n    console.log('Status is not true');\n  }\n}\n\nfunction AccountOrders({\n  orders\n}) {\n  const router = useRouter();\n\n  function mapOrdersToPanels(orders) {\n    return orders.map(order => ({\n      key: order._id,\n      title: {\n        content: __jsx(Label, {\n          color: \"blue\",\n          content: formatDate(order.createdAt),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        })\n      },\n      content: {\n        content: __jsx(React.Fragment, null, __jsx(List.Header, {\n          as: \"h3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"Total: $\", order.total, __jsx(Label, {\n          content: order.email,\n          icon: \"mail\",\n          basic: true,\n          horizontal: true,\n          style: {\n            marginLeft: '1em'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }), __jsx(Label, {\n          tag: true,\n          color: \"red\",\n          size: \"tiny\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, order.status)), __jsx(List, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, order.products.map(p => __jsx(List.Item, {\n          key: p.product._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, __jsx(Image, {\n          avatar: true,\n          src: p.product.mediaUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), __jsx(List.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, __jsx(List.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, p.product.name), __jsx(List.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, p.quantity, \" . $\", p.product.price)), __jsx(List.Content, {\n          floated: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, __jsx(Label, {\n          tag: true,\n          color: \"red\",\n          size: \"tiny\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, p.product.sku))))))\n      }\n    }));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"folder open\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), \"Order History\"), orders.length === 0 ? __jsx(Segment, {\n    inverted: true,\n    tertiary: true,\n    color: \"grey\",\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(Header, {\n    icon: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"copy outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), \"No past orders.\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: () => router.push('/'),\n    color: \"orange\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"View Products\"))) : __jsx(Accordion, {\n    fluid: true,\n    styled: true,\n    exclusive: false,\n    panels: mapOrdersToPanels(orders),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }));\n}\n\nexport default AccountOrders;","map":{"version":3,"sources":["/Users/david/Dev/myapps/Builders-Log/components/Account/AccountOrderStatus.js"],"names":["Header","Accordion","Label","Segment","Icon","Button","List","Image","useRouter","formatDate","statusColor","status","setStatus","console","log","AccountOrders","orders","router","mapOrdersToPanels","map","order","key","_id","title","content","createdAt","total","email","marginLeft","products","p","product","mediaUrl","name","quantity","price","sku","length","push"],"mappings":"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","sourcesContent":["import { Header, Accordion, Label, Segment, Icon, Button, List, Image } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\nimport formatDate from '../../utils/formatDate';\n\nfunction statusColor() {\n  const { status } = \"open\";\n  if (status === \"open\") {\n    setStatus();\n    console.log('Order status is open');\n  } else {\n    console.log('Status is not true');\n  }\n}\n\nfunction AccountOrders({ orders }) {\n  const router = useRouter()\n\n  function mapOrdersToPanels(orders) {\n    return orders.map(order => ({\n      key: order._id,\n      title: {\n        content: <Label color=\"blue\" content={formatDate(order.createdAt)}/>\n      },\n      content: {\n        content: (\n        <>\n          <List.Header as=\"h3\">\n            Total: ${order.total}\n            <Label \n              content={order.email}\n              icon=\"mail\"\n              basic\n              horizontal\n              style={{ marginLeft: '1em' }}\n            />\n            <Label tag color=\"red\" size=\"tiny\">\n                    {order.status}\n                  </Label> \n          </List.Header>\n          <List>\n            {order.products.map(p => (\n              <List.Item key={p.product._id}>\n                <Image avatar src={p.product.mediaUrl}/>\n                <List.Content>\n                  <List.Header>{p.product.name}</List.Header>\n                  <List.Description>\n                    {p.quantity} . ${p.product.price}\n                  </List.Description>\n                </List.Content>\n                <List.Content floated=\"right\">\n                  <Label tag color=\"red\" size=\"tiny\">\n                    {p.product.sku}\n                  </Label> \n                </List.Content>\n              </List.Item>\n            ))}\n          </List>\n        </>\n        )\n      }\n    }));\n  }\n\n  return <>\n    <Header as=\"h2\">\n      <Icon name=\"folder open\"/>\n      Order History\n    </Header>\n    {orders.length === 0 ? (\n      <Segment inverted tertiary color=\"grey\" textAlign=\"center\">\n        <Header icon>\n          <Icon name=\"copy outline\"/>\n          No past orders.\n        </Header>\n        <div>\n          <Button onClick={() => router.push('/')} color=\"orange\">\n            View Products\n          </Button>\n        </div>\n      </Segment>\n    ) : (\n      <Accordion\n        fluid\n        styled\n        exclusive={false}\n        panels={mapOrdersToPanels(orders)}\n        />\n    )}\n  </>;\n}\n\nexport default AccountOrders;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/david/Dev/myapps/Builders-Log/pages/orders.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport AccountHeader from '../components/Account/AccountHeader';\nimport AccountOrders from '../components/Account/AccountOrders';\nimport AccountPermissions from '../components/Account/AccountPermissions';\nimport { parseCookies } from 'nookies';\nimport baseUrl from '../utils/baseUrl';\nimport axios from 'axios';\n\nfunction Orders(_ref) {\n  var user = _ref.user,\n      orders = _ref.orders;\n  return __jsx(React.Fragment, null, __jsx(AccountOrders, {\n    orders: orders,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n}\n\nAccount.getInitialProps = function _callee(ctx) {\n  var _parseCookies, token, payload, url, response;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _parseCookies = parseCookies(ctx), token = _parseCookies.token;\n\n          if (token) {\n            _context.next = 3;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            orders: []\n          });\n\n        case 3:\n          payload = {\n            headers: {\n              Authorization: token\n            }\n          };\n          url = \"\".concat(baseUrl, \"/api/orders\");\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(axios.get(url, payload));\n\n        case 7:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response.data);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\n\nexport default Orders;","map":{"version":3,"sources":["/Users/david/Dev/myapps/Builders-Log/pages/orders.js"],"names":["AccountHeader","AccountOrders","AccountPermissions","parseCookies","baseUrl","axios","Orders","user","orders","Account","getInitialProps","ctx","token","payload","headers","Authorization","url","get","response","data"],"mappings":";;;;;AAAA,OAAOA,aAAP,MAA0B,qCAA1B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,OAAkC;AAAA,MAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAChC,SAAO,4BACL,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEA,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CAAP;AAGD;;AAEDC,OAAO,CAACC,eAAR,GAA0B,iBAAMC,GAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BACNR,YAAY,CAACQ,GAAD,CADN,EAChBC,KADgB,iBAChBA,KADgB;;AAAA,cAEnBA,KAFmB;AAAA;AAAA;AAAA;;AAAA,2CAGf;AAAEJ,YAAAA,MAAM,EAAE;AAAV,WAHe;;AAAA;AAKlBK,UAAAA,OALkB,GAKR;AAAEC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAEH;AAAjB;AAAX,WALQ;AAMlBI,UAAAA,GANkB,aAMTZ,OANS;AAAA;AAAA,2CAODC,KAAK,CAACY,GAAN,CAAUD,GAAV,EAAeH,OAAf,CAPC;;AAAA;AAOlBK,UAAAA,QAPkB;AAAA,2CAQjBA,QAAQ,CAACC,IARQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAWA,eAAeb,MAAf","sourcesContent":["import AccountHeader from '../components/Account/AccountHeader';\nimport AccountOrders from '../components/Account/AccountOrders';\nimport AccountPermissions from '../components/Account/AccountPermissions';\nimport { parseCookies } from 'nookies';\nimport baseUrl from '../utils/baseUrl';\nimport axios from 'axios';\n\nfunction Orders({ user, orders }) {\n  return <>\n    <AccountOrders orders={orders}/>\n  </>;\n}\n\nAccount.getInitialProps = async ctx => {\n  const { token } = parseCookies(ctx)\n  if (!token) {\n    return { orders: [] }\n  }\n  const payload = { headers: { Authorization: token }}\n  const url = `${baseUrl}/api/orders`\n  const response = await axios.get(url, payload)\n  return response.data;\n}\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import Product from '../../models/Product';\nimport connectDb from \"../../utils/connectDb\";\nconnectDb();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await handleGetRequest(req, res);\n      break;\n\n    case \"POST\":\n      await handlePostRequest(req, res);\n      break;\n\n    case \"DELETE\":\n      await handleDeleteRequest(req, res);\n      break;\n\n    default:\n      res.status(405).send(`Method ${req.method} not allowed`);\n      break;\n  }\n});\n\nasync function handleGetRequest(req, res) {\n  const {\n    _id\n  } = req.query;\n  const product = await Product.findOne({\n    _id\n  });\n  res.status(200).json(product);\n}\n\nasync function handlePostRequest(req, res) {\n  const {\n    name,\n    price,\n    description,\n    mediaUrl\n  } = req.body;\n\n  try {\n    if (!name || !price || !description || !mediaUrl) {\n      return res.status(422).send(\"Product missing one or more fields\");\n    }\n\n    const product = await new Product({\n      name,\n      price,\n      description,\n      mediaUrl\n    }).save();\n    res.status(201).json(product);\n  } catch (error) {\n    console.error(error);\n    res.status(500).send(\"Server failed to create product.\");\n  }\n}\n\nasync function handleDeleteRequest(req, res) {\n  const {\n    _id\n  } = req.query;\n  await Product.findOneAndDelete({\n    _id\n  });\n  res.status(204).json({});\n} //export default async (req, res) => {\n//    const { _id } = req.query\n//    const product = await Product.findOne({ _id })\n//    res.status(200).json(product)\n//};","map":{"version":3,"sources":["/Users/david/Dev/myapps/Builders-Log/pages/api/product.js"],"names":["Product","connectDb","req","res","method","handleGetRequest","handlePostRequest","handleDeleteRequest","status","send","_id","query","product","findOne","json","name","price","description","mediaUrl","body","save","error","console","findOneAndDelete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEAA,SAAS;AAET,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,UAAQD,GAAG,CAACE,MAAZ;AACI,SAAK,KAAL;AACI,YAAMC,gBAAgB,CAACH,GAAD,EAAMC,GAAN,CAAtB;AACA;;AACJ,SAAK,MAAL;AACI,YAAMG,iBAAiB,CAACJ,GAAD,EAAMC,GAAN,CAAvB;AACA;;AACJ,SAAK,QAAL;AACI,YAAMI,mBAAmB,CAACL,GAAD,EAAMC,GAAN,CAAzB;AACA;;AACJ;AACIA,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB,UAASP,GAAG,CAACE,MAAO,cAA1C;AACA;AAZR;AAcH,CAfD;;AAiBA,eAAeC,gBAAf,CAAgCH,GAAhC,EAAqCC,GAArC,EAA0C;AACtC,QAAM;AAAEO,IAAAA;AAAF,MAAUR,GAAG,CAACS,KAApB;AACA,QAAMC,OAAO,GAAG,MAAMZ,OAAO,CAACa,OAAR,CAAgB;AAAEH,IAAAA;AAAF,GAAhB,CAAtB;AACAP,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqBF,OAArB;AACH;;AAED,eAAeN,iBAAf,CAAiCJ,GAAjC,EAAsCC,GAAtC,EAA2C;AACvC,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,WAAf;AAA4BC,IAAAA;AAA5B,MAAyChB,GAAG,CAACiB,IAAnD;;AACA,MAAI;AACA,QAAI,CAACJ,IAAD,IAAS,CAACC,KAAV,IAAmB,CAACC,WAApB,IAAmC,CAACC,QAAxC,EAAkD;AAC9C,aAAOf,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,oCAArB,CAAP;AACH;;AACD,UAAMG,OAAO,GAAG,MAAM,IAAIZ,OAAJ,CAAY;AAC9Be,MAAAA,IAD8B;AAE9BC,MAAAA,KAF8B;AAG9BC,MAAAA,WAH8B;AAI9BC,MAAAA;AAJ8B,KAAZ,EAKnBE,IALmB,EAAtB;AAMAjB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqBF,OAArB;AACH,GAXD,CAWE,OAAMS,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAlB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kCAArB;AACH;AACJ;;AAED,eAAeF,mBAAf,CAAmCL,GAAnC,EAAwCC,GAAxC,EAA6C;AACzC,QAAM;AAAEO,IAAAA;AAAF,MAAUR,GAAG,CAACS,KAApB;AACA,QAAMX,OAAO,CAACuB,gBAAR,CAAyB;AAAEb,IAAAA;AAAF,GAAzB,CAAN;AACAP,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB,EAArB;AACH,C,CACD;AACA;AACA;AACA;AACA","sourcesContent":["import Product from '../../models/Product'\nimport connectDb from \"../../utils/connectDb\";\n\nconnectDb();\n\nexport default async (req, res) => {\n    switch (req.method) {\n        case \"GET\":\n            await handleGetRequest(req, res);\n            break;\n        case \"POST\":\n            await handlePostRequest(req, res);\n            break;\n        case \"DELETE\":\n            await handleDeleteRequest(req, res);\n            break;\n        default:\n            res.status(405).send(`Method ${req.method} not allowed`);\n            break;\n    }\n};\n\nasync function handleGetRequest(req, res) {\n    const { _id } = req.query\n    const product = await Product.findOne({ _id })\n    res.status(200).json(product)\n}\n\nasync function handlePostRequest(req, res) {\n    const { name, price, description, mediaUrl } = req.body\n    try {\n        if (!name || !price || !description || !mediaUrl) {\n            return res.status(422).send(\"Product missing one or more fields\");\n        }\n        const product = await new Product({\n            name,\n            price,\n            description,\n            mediaUrl\n        }).save();\n        res.status(201).json(product);\n    } catch(error) {\n        console.error(error);\n        res.status(500).send(\"Server failed to create product.\")\n    }\n}\n\nasync function handleDeleteRequest(req, res) {\n    const { _id } = req.query\n    await Product.findOneAndDelete({ _id })\n    res.status(204).json({})\n}\n//export default async (req, res) => {\n//    const { _id } = req.query\n//    const product = await Product.findOne({ _id })\n//    res.status(200).json(product)\n//};\n\n"]},"metadata":{},"sourceType":"module"}
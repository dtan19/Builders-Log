{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react'; //import { CsvToHtmlTable } from 'react-csv-to-table';\n\nimport { Form, Item, Input, TextArea, Button, Image, Message, Header, Embed, Icon, Container } from 'semantic-ui-react';\nimport axios from 'axios';\nimport baseUrl from '../utils/baseUrl';\nimport catchErrors from '../utils/catchErrors';\nimport Router from 'next/router';\nimport AddProductToCart from '../components/Product/AddProductToCart';\nvar vidStyle = {\n  paddingTop: '20px',\n  marginBottom: '60px',\n  background: '#777777'\n};\n\nvar conStyle = _defineProperty({\n  paddingTop: '20px',\n  marginBottom: '20px',\n  width: '100%',\n  height: '50px',\n  border: '1px solid #999',\n  borderRadius: '5px'\n}, \"marginBottom\", '60px');\n\nvar INITIAL_TABLE = {\n  name: \"\",\n  columns: \"\",\n  rows: \"\",\n  media: \"\"\n};\n\nfunction CreateSheet(_id, user) {\n  var _React$useState = React.useState(INITIAL_TABLE),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      table = _React$useState2[0],\n      setTable = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      mediaPreview = _React$useState4[0],\n      setMediaPreview = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      success = _React$useState6[0],\n      setSuccess = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      loading = _React$useState8[0],\n      setLoading = _React$useState8[1];\n\n  var _React$useState9 = React.useState(true),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      disabled = _React$useState10[0],\n      setDisabled = _React$useState10[1];\n\n  var _React$useState11 = React.useState(''),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      error = _React$useState12[0],\n      setError = _React$useState12[1];\n\n  React.useEffect(function () {\n    var isTable = _Object$values(table).every(function (el) {\n      return Boolean(el);\n    });\n\n    isTable ? setDisabled(false) : setDisabled(true);\n  }, [table]);\n\n  function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value,\n        files = _event$target.files;\n\n    if (name === \"media\") {\n      setTable(function (prevState) {\n        return _objectSpread({}, prevState, {\n          media: files[0]\n        });\n      });\n      setMediaPreview(window.URL.createObjectURL(files[0]));\n    } else {\n      setTable(function (prevState) {\n        return _objectSpread({}, prevState, _defineProperty({}, name, value));\n      });\n    }\n  }\n\n  function handleImageUpload() {\n    var data, response, mediaUrl;\n    return _regeneratorRuntime.async(function handleImageUpload$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = new FormData();\n            data.append('file', table.media);\n            data.append('upload_preset', 'builders-log');\n            data.append('cloud_name', 'dtan19');\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios.post(process.env.CLOUDINARY_URL, data));\n\n          case 6:\n            response = _context.sent;\n            mediaUrl = response.data.url;\n            return _context.abrupt(\"return\", mediaUrl);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  }\n\n  function handleSubmit(event) {\n    var mediaUrl, url, name, columns, rows, payload, response, sheetId;\n    return _regeneratorRuntime.async(function handleSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            event.preventDefault();\n            setLoading(true);\n            setError('');\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(handleImageUpload());\n\n          case 6:\n            mediaUrl = _context2.sent;\n            url = \"\".concat(baseUrl, \"/api/sheet\");\n            name = table.name, columns = table.columns, rows = table.rows;\n            payload = {\n              name: name,\n              columns: columns,\n              rows: rows,\n              mediaUrl: mediaUrl\n            };\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(axios.post(url, payload));\n\n          case 12:\n            response = _context2.sent;\n            //console.log({ response });\n            setTable(INITIAL_TABLE);\n            setSuccess(true);\n            sheetId = response.data._id;\n            Router.push(\"/sheet?_id=\".concat(sheetId));\n            _context2.next = 22;\n            break;\n\n          case 19:\n            _context2.prev = 19;\n            _context2.t0 = _context2[\"catch\"](0);\n            catchErrors(_context2.t0, setError);\n\n          case 22:\n            _context2.prev = 22;\n            setLoading(false);\n            return _context2.finish(22);\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 19, 22, 25]], _Promise);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    as: \"h2\",\n    block: true\n  }, __jsx(Icon, {\n    name: \"add\",\n    color: \"orange\"\n  }), \"Create New Pricing Sheet\"), __jsx(Form, {\n    loading: loading,\n    error: Boolean(error),\n    success: success,\n    onSubmit: handleSubmit\n  }, __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: error\n  }), __jsx(Message, {\n    success: true,\n    icon: \"check\",\n    header: \"Success\",\n    content: \"Your sheet has been created\"\n  }), __jsx(Form.Group, {\n    widths: \"equal\"\n  }, __jsx(Form.Field, {\n    control: Input,\n    name: \"media\",\n    type: \"file\",\n    label: \"Media\" //accept=\"image/*\"\n    ,\n    content: \"Select Image\",\n    onChange: handleChange\n  })), __jsx(Image, {\n    src: mediaPreview,\n    rounded: true,\n    centered: true,\n    size: \"small\"\n  }), __jsx(Form.Group, null, __jsx(\"p\", null, \"Create your own pricing sheet:\")), __jsx(Form.Group, {\n    widths: \"equal\"\n  }, __jsx(Form.Field, {\n    control: Input,\n    name: \"name\",\n    label: \"Sheet Name\",\n    onChange: handleChange\n  })), __jsx(Form.Group, {\n    widths: \"equal\"\n  }, __jsx(Form.Field, {\n    control: Input,\n    name: \"columns\",\n    label: \"Number of Columns\",\n    placeholder: \"1\",\n    min: \"1\",\n    step: \"1\",\n    type: \"number\",\n    value: table.columns,\n    onChange: handleChange\n  }), __jsx(Form.Field, {\n    control: Input,\n    name: \"rows\",\n    label: \"Number of Rows\",\n    placeholder: \"1\",\n    min: \"1\",\n    step: \"1\",\n    type: \"number\",\n    value: table.rows,\n    onChange: handleChange\n  })), __jsx(Form.Field, {\n    control: Button //disabled={disabled || loading}\n    ,\n    color: \"blue\",\n    content: \"Create\",\n    type: \"Submit\"\n  }), __jsx(Item.Extra, null, __jsx(AddProductToCart, {\n    user: user,\n    productId: _id\n  }))), __jsx(\"h3\", null, \"Here is a container:\"), __jsx(Container, {\n    style: conStyle\n  }));\n}\n\nexport default CreateSheet;","map":null,"metadata":{},"sourceType":"module"}
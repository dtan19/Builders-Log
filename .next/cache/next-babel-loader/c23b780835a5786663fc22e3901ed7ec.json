{"ast":null,"code":"import Coin from '../../models/Coin';\nimport connectDb from \"../../utils/connectDb\";\nconnectDb();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await handleGetRequest(req, res);\n      break;\n\n    case \"POST\":\n      await handlePostRequest(req, res);\n      break;\n\n    case \"DELETE\":\n      await handleDeleteRequest(req, res);\n      break;\n\n    default:\n      res.status(405).send(`Method ${req.method} not allowed`);\n      break;\n  }\n});\n\nasync function handleGetRequest(req, res) {\n  const {\n    _id\n  } = req.query;\n  const coin = await Coin.findOne({\n    _id\n  });\n  res.status(200).json(coin);\n}\n\nasync function handlePostRequest(req, res) {\n  const {\n    mediaUrl,\n    year,\n    mint,\n    era,\n    grade,\n    index\n  } = req.body;\n\n  try {\n    if (!year || !mint || !grade || !index || !era || !mediaUrl) {\n      return res.status(422).send(\"missing one or more fields\");\n    }\n\n    const coin = await new Coin({\n      year,\n      mint,\n      era,\n      grade,\n      index,\n      mediaUrl\n    }).save();\n    res.status(201).json(coin);\n    console.log(coin);\n  } catch (error) {\n    console.error(error);\n    res.status(500).send(\"Server failed to create sheet.\");\n  }\n}\n\nasync function handleDeleteRequest(req, res) {\n  const {\n    _id\n  } = req.query;\n  await Coin.findOneAndDelete({\n    _id\n  });\n  res.status(204).json({});\n}","map":{"version":3,"sources":["/Users/david/Dev/myapps/Builders-Log/pages/api/coin.js"],"names":["Coin","connectDb","req","res","method","handleGetRequest","handlePostRequest","handleDeleteRequest","status","send","_id","query","coin","findOne","json","mediaUrl","year","mint","era","grade","index","body","save","console","log","error","findOneAndDelete"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEAA,SAAS;AAET,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,UAAQD,GAAG,CAACE,MAAZ;AACI,SAAK,KAAL;AACI,YAAMC,gBAAgB,CAACH,GAAD,EAAMC,GAAN,CAAtB;AACA;;AACJ,SAAK,MAAL;AACI,YAAMG,iBAAiB,CAACJ,GAAD,EAAMC,GAAN,CAAvB;AACA;;AACJ,SAAK,QAAL;AACI,YAAMI,mBAAmB,CAACL,GAAD,EAAMC,GAAN,CAAzB;AACA;;AACJ;AACIA,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB,UAASP,GAAG,CAACE,MAAO,cAA1C;AACA;AAZR;AAcH,CAfD;;AAiBA,eAAeC,gBAAf,CAAgCH,GAAhC,EAAqCC,GAArC,EAA0C;AACtC,QAAM;AAAEO,IAAAA;AAAF,MAAUR,GAAG,CAACS,KAApB;AACA,QAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACa,OAAL,CAAa;AAAEH,IAAAA;AAAF,GAAb,CAAnB;AACAP,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqBF,IAArB;AACH;;AAED,eAAeN,iBAAf,CAAiCJ,GAAjC,EAAsCC,GAAtC,EAA2C;AACvC,QAAM;AAAEY,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,GAAxB;AAA6BC,IAAAA,KAA7B;AAAoCC,IAAAA;AAApC,MAA8ClB,GAAG,CAACmB,IAAxD;;AACA,MAAI;AACA,QAAK,CAACL,IAAD,IAAS,CAACC,IAAV,IAAkB,CAACE,KAAnB,IAA4B,CAACC,KAA7B,IAAsC,CAACF,GAAvC,IAA8C,CAACH,QAApD,EAA+D;AAC3D,aAAOZ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,4BAArB,CAAP;AACH;;AACD,UAAMG,IAAI,GAAG,MAAM,IAAIZ,IAAJ,CAAS;AACxBgB,MAAAA,IADwB;AAExBC,MAAAA,IAFwB;AAGxBC,MAAAA,GAHwB;AAIxBC,MAAAA,KAJwB;AAKxBC,MAAAA,KALwB;AAMxBL,MAAAA;AANwB,KAAT,EAOhBO,IAPgB,EAAnB;AAQAnB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqBF,IAArB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACH,GAdD,CAcE,OAAMa,KAAN,EAAa;AACXF,IAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACAtB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gCAArB;AACH;AACJ;;AAED,eAAeF,mBAAf,CAAmCL,GAAnC,EAAwCC,GAAxC,EAA6C;AACzC,QAAM;AAAEO,IAAAA;AAAF,MAAUR,GAAG,CAACS,KAApB;AACA,QAAMX,IAAI,CAAC0B,gBAAL,CAAsB;AAAEhB,IAAAA;AAAF,GAAtB,CAAN;AACAP,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB,EAArB;AACH","sourcesContent":["import Coin from '../../models/Coin'\nimport connectDb from \"../../utils/connectDb\";\n\nconnectDb();\n\nexport default async (req, res) => {\n    switch (req.method) {\n        case \"GET\":\n            await handleGetRequest(req, res);\n            break;\n        case \"POST\":\n            await handlePostRequest(req, res);\n            break;\n        case \"DELETE\":\n            await handleDeleteRequest(req, res);\n            break;\n        default:\n            res.status(405).send(`Method ${req.method} not allowed`);\n            break;\n    }\n};\n\nasync function handleGetRequest(req, res) {\n    const { _id } = req.query\n    const coin = await Coin.findOne({ _id })\n    res.status(200).json(coin)\n}\n\nasync function handlePostRequest(req, res) {\n    const { mediaUrl, year, mint, era, grade, index } = req.body\n    try {\n        if ( !year || !mint || !grade || !index || !era || !mediaUrl ) {\n            return res.status(422).send(\"missing one or more fields\");\n        }\n        const coin = await new Coin({\n            year,\n            mint,\n            era,\n            grade,\n            index,\n            mediaUrl\n        }).save();\n        res.status(201).json(coin);\n        console.log(coin);\n    } catch(error) {\n        console.error(error);\n        res.status(500).send(\"Server failed to create sheet.\")\n    }\n}\n\nasync function handleDeleteRequest(req, res) {\n    const { _id } = req.query\n    await Coin.findOneAndDelete({ _id })\n    res.status(204).json({})\n}\n\n"]},"metadata":{},"sourceType":"module"}
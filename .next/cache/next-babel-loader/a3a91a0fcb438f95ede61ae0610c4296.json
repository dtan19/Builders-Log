{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport AccountHeader from '../components/Account/AccountHeader';\nimport AccountOrders from '../components/Account/AccountOrders';\nimport AccountPermissions from '../components/Account/AccountPermissions';\nimport CreateProduct from '../components/Product/CreateProduct';\nimport { parseCookies } from 'nookies';\nimport baseUrl from '../utils/baseUrl';\nimport axios from 'axios';\n\nfunction Account(_ref) {\n  var user = _ref.user,\n      orders = _ref.orders;\n  return __jsx(React.Fragment, null, __jsx(AccountHeader, user), __jsx(AccountOrders, {\n    orders: orders\n  }), __jsx(CreateProduct, null), user.role === 'root' && __jsx(AccountPermissions, null));\n}\n\nAccount.getInitialProps = function _callee(ctx) {\n  var _parseCookies, token, payload, url, response;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _parseCookies = parseCookies(ctx), token = _parseCookies.token;\n\n          if (token) {\n            _context.next = 3;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            orders: []\n          });\n\n        case 3:\n          payload = {\n            headers: {\n              Authorization: token\n            }\n          };\n          url = \"\".concat(baseUrl, \"/api/orders\");\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(axios.get(url, payload));\n\n        case 7:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response.data);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\n\nexport default Account;","map":null,"metadata":{},"sourceType":"module"}
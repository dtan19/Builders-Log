{"ast":null,"code":"var _jsxFileName = \"/Users/david/Dev/myapps/Builders-Log/components/Product/AddProductToCart.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Input } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport baseUrl from '../../utils/baseUrl';\nimport cookie from 'js-cookie';\nimport catchErrors from '../../utils/catchErrors';\n\nfunction AddProductToCart({\n  user,\n  productId\n}) {\n  const [quantity, setQuantity] = React.useState(1);\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const router = useRouter();\n  const userLog = {\n    user\n  };\n  console.log(userLog);\n\n  async function handleAddProductToCart() {\n    try {\n      setLoading(true);\n      const url = `${baseUrl}/api/cart`;\n      const payload = {\n        quantity,\n        productId\n      };\n      const token = cookie.get('token');\n      const headers = {\n        headers: {\n          Authorization: token\n        }\n      };\n      await axios.put(url, payload, headers);\n      setSuccess(true);\n    } catch (error) {\n      catchErrors(error, window.alert);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return __jsx(Input, {\n    type: \"number\",\n    min: \"1\",\n    placeholder: \"Quantity\",\n    value: quantity,\n    onChange: event => setQuantity(Number(event.target.value)),\n    action: user && success ? {\n      color: 'blue',\n      content: \"Item Added!\",\n      icon: \"plus cart\",\n      disabled: false\n    } : user ? {\n      color: \"green\",\n      content: \"Add to Cart\",\n      icon: \"plus cart\",\n      loading,\n      disabled: loading,\n      onClick: handleAddProductToCart\n    } : {\n      color: 'blue',\n      content: \"Sign Up To purchase\",\n      icon: \"signup\",\n      onClick: () => router.push('/signup')\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  });\n}\n\nexport default AddProductToCart;","map":{"version":3,"sources":["/Users/david/Dev/myapps/Builders-Log/components/Product/AddProductToCart.js"],"names":["React","Input","useRouter","axios","baseUrl","cookie","catchErrors","AddProductToCart","user","productId","quantity","setQuantity","useState","loading","setLoading","success","setSuccess","router","userLog","console","log","handleAddProductToCart","url","payload","token","get","headers","Authorization","put","error","window","alert","event","Number","target","value","color","content","icon","disabled","onClick","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAGA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA1B,EAA+C;AAC7C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,KAAK,CAACY,QAAN,CAAe,CAAf,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,KAAK,CAACY,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBhB,KAAK,CAACY,QAAN,CAAe,KAAf,CAA9B;AACA,QAAMK,MAAM,GAAGf,SAAS,EAAxB;AACA,QAAMgB,OAAO,GAAG;AAACV,IAAAA;AAAD,GAAhB;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AAEA,iBAAeG,sBAAf,GAAwC;AACtC,QAAI;AACFP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMQ,GAAG,GAAI,GAAElB,OAAQ,WAAvB;AACA,YAAMmB,OAAO,GAAG;AAAEb,QAAAA,QAAF;AAAYD,QAAAA;AAAZ,OAAhB;AACA,YAAMe,KAAK,GAAGnB,MAAM,CAACoB,GAAP,CAAW,OAAX,CAAd;AACA,YAAMC,OAAO,GAAG;AAAEA,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEH;AAAjB;AAAX,OAAhB;AACA,YAAMrB,KAAK,CAACyB,GAAN,CAAWN,GAAX,EAAgBC,OAAhB,EAAyBG,OAAzB,CAAN;AACAV,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KARC,CAQA,OAAOa,KAAP,EAAc;AACdvB,MAAAA,WAAW,CAACuB,KAAD,EAAQC,MAAM,CAACC,KAAf,CAAX;AACD,KAVC,SAUQ;AACRjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;;AAED,SACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,GAAG,EAAC,GAFN;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,KAAK,EAAEJ,QAJT;AAKE,IAAA,QAAQ,EAAEsB,KAAK,IAAIrB,WAAW,CAACsB,MAAM,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAP,CALhC;AAME,IAAA,MAAM,EACN3B,IAAI,IAAIO,OAAR,GAAkB;AAChBqB,MAAAA,KAAK,EAAE,MADS;AAEhBC,MAAAA,OAAO,EAAE,aAFO;AAGhBC,MAAAA,IAAI,EAAE,WAHU;AAIhBC,MAAAA,QAAQ,EAAE;AAJM,KAAlB,GAMA/B,IAAI,GAAG;AACP4B,MAAAA,KAAK,EAAE,OADA;AAEPC,MAAAA,OAAO,EAAE,aAFF;AAGPC,MAAAA,IAAI,EAAE,WAHC;AAIPzB,MAAAA,OAJO;AAKP0B,MAAAA,QAAQ,EAAE1B,OALH;AAMP2B,MAAAA,OAAO,EAAEnB;AANF,KAAH,GAOF;AACFe,MAAAA,KAAK,EAAE,MADL;AAEFC,MAAAA,OAAO,EAAE,qBAFP;AAGFC,MAAAA,IAAI,EAAE,QAHJ;AAIFE,MAAAA,OAAO,EAAE,MAAMvB,MAAM,CAACwB,IAAP,CAAY,SAAZ;AAJb,KApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA4BC;;AAED,eAAelC,gBAAf","sourcesContent":["import React from 'react';\nimport { Input } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport baseUrl from '../../utils/baseUrl';\nimport cookie from 'js-cookie';\nimport catchErrors from '../../utils/catchErrors';\n\n\nfunction AddProductToCart({ user, productId }) {\n  const [quantity, setQuantity] = React.useState(1);\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const router = useRouter();\n  const userLog = {user};\n  console.log(userLog)\n\n  async function handleAddProductToCart() {\n    try {\n      setLoading(true)\n      const url = `${baseUrl}/api/cart`\n      const payload = { quantity, productId }\n      const token = cookie.get('token')\n      const headers = { headers: { Authorization: token }}\n      await axios.put( url, payload, headers );\n      setSuccess(true);\n  } catch (error) {\n    catchErrors(error, window.alert)\n  } finally {\n    setLoading(false)\n  }\n}\n\nreturn (\n  <Input\n    type=\"number\"\n    min=\"1\"\n    placeholder=\"Quantity\"\n    value={quantity}\n    onChange={event => setQuantity(Number(event.target.value))}\n    action={\n    user && success ? {\n      color: 'blue',\n      content: \"Item Added!\",\n      icon: \"plus cart\",\n      disabled: false\n  } : \n    user ? {\n    color: \"green\",\n    content: \"Add to Cart\",\n    icon: \"plus cart\",\n    loading,\n    disabled: loading,\n    onClick: handleAddProductToCart,\n  } : {\n    color: 'blue',\n    content: \"Sign Up To purchase\",\n    icon: \"signup\",\n    onClick: () => router.push('/signup')\n  }}\n/>)\n}\n\nexport default AddProductToCart;"]},"metadata":{},"sourceType":"module"}
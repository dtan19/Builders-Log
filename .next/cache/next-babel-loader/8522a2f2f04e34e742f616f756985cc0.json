{"ast":null,"code":"var _jsxFileName = \"/Users/david/Dev/myapps/Builders-Log/pages/log.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport axios from \"axios\";\nimport LogSummary from '../components/Log/LogSummary';\nimport LogAttributes from '../components/Log/LogAttributes';\nimport baseUrl from '../utils/baseUrl';\nimport { parseCookies } from 'nookies';\nimport Router from 'next/router';\n\nfunction Log({\n  log,\n  user\n}) {\n  return __jsx(React.Fragment, null, __jsx(LogSummary, _extends({}, log, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })), __jsx(LogAttributes, _extends({\n    user: user\n  }, log, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })));\n} //need to define ctx and pass in parseCookies(ctx). See builders page\n\n\nLog.getInitialProps = async ({\n  query: {\n    _id\n  }\n}) => {\n  const {\n    token\n  } = parseCookies(ctx);\n\n  if (!token) {\n    const url = `${baseUrl}/api/log`;\n    const payload = {\n      params: {\n        _id\n      }\n    };\n    const response = await axios.get(url, payload);\n    return {\n      log: response.data\n    };\n  } else {\n    Router.push(`/login`);\n  }\n};\n\nexport default Log;","map":{"version":3,"sources":["/Users/david/Dev/myapps/Builders-Log/pages/log.js"],"names":["axios","LogSummary","LogAttributes","baseUrl","parseCookies","Router","Log","log","user","getInitialProps","query","_id","token","ctx","url","payload","params","response","get","data","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,SAASC,GAAT,CAAa;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAb,EAA4B;AAC1B,SACE,4BACE,MAAC,UAAD,eAAgBD,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,MAAC,aAAD;AAAe,IAAA,IAAI,EAAEC;AAArB,KAA+BD,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAMD,C,CAED;;;AAEAD,GAAG,CAACG,eAAJ,GAAsB,OAAO;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF;AAAT,CAAP,KAA8B;AAClD,QAAM;AAAEC,IAAAA;AAAF,MAAYR,YAAY,CAACS,GAAD,CAA9B;;AACA,MAAI,CAACD,KAAL,EAAY;AACV,UAAME,GAAG,GAAI,GAAEX,OAAQ,UAAvB;AACA,UAAMY,OAAO,GAAG;AAAEC,MAAAA,MAAM,EAAE;AAAEL,QAAAA;AAAF;AAAV,KAAhB;AACA,UAAMM,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAUJ,GAAV,EAAeC,OAAf,CAAvB;AACA,WAAO;AAAER,MAAAA,GAAG,EAAEU,QAAQ,CAACE;AAAhB,KAAP;AACD,GALD,MAKO;AACLd,IAAAA,MAAM,CAACe,IAAP,CAAa,QAAb;AACD;AACF,CAVD;;AAYA,eAAed,GAAf","sourcesContent":["import axios from \"axios\";\nimport LogSummary from '../components/Log/LogSummary';\nimport LogAttributes from '../components/Log/LogAttributes';\nimport baseUrl from '../utils/baseUrl';\nimport { parseCookies } from 'nookies';\nimport Router from 'next/router';\n\nfunction Log({ log, user }) {\n  return (\n    <>\n      <LogSummary {...log}/>\n      <LogAttributes user={user} {...log}/>\n    </>\n  )\n}\n\n//need to define ctx and pass in parseCookies(ctx). See builders page\n\nLog.getInitialProps = async ({ query: { _id } }) => {\n  const { token } = parseCookies(ctx)\n  if (!token) {\n    const url = `${baseUrl}/api/log`;\n    const payload = { params: { _id } };\n    const response = await axios.get(url, payload);\n    return { log: response.data }\n  } else {\n    Router.push(`/login`)\n  }\n}\n\nexport default Log;\n"]},"metadata":{},"sourceType":"module"}